{"behaviors":[{"type":"behavior","desc":"\nBehavior that provides registration with the save event. Elements\nthat implement this behavior must implement the `onSave` method to\ndefine the element specific save procedure.\n\n","events":[],"jsdoc":{"description":"\nBehavior that provides registration with the save event. Elements\nthat implement this behavior must implement the `onSave` method to\ndefine the element specific save procedure.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.JupyterSaveBehavior","description":null}],"orig":"*\n         * Behavior that provides registration with the save event. Elements\n         * that implement this behavior must implement the `onSave` method to\n         * define the element specific save procedure.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.JupyterSaveBehavior\n         "},"demos":[],"symbol":"Urth.JupyterSaveBehavior","is":"Urth.JupyterSaveBehavior","properties":[{"name":"onSave","type":"Function","desc":"\nElement specific handler for the save event.\n\n","params":[],"jsdoc":{"description":"\nElement specific handler for the save event.\n\n","tags":[{"tag":"method","type":null,"name":"onSave","description":null}],"orig":"*\n             * Element specific handler for the save event.\n             *\n             * @method onSave\n             "},"function":true},{"name":"created","type":"Function","params":[{"name":"event"},{"name":"callback"}],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[{"name":"event"},{"name":"callback"}],"private":true,"configuration":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/jupyter-save-behavior.html"},{"type":"behavior","desc":"\nBehavior that provides pre-attached callbacks to kernel events.\n\n","events":[],"jsdoc":{"description":"\nBehavior that provides pre-attached callbacks to kernel events.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.JupyterKernelObserver","description":null}],"orig":"*\n         * Behavior that provides pre-attached callbacks to kernel events.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.JupyterKernelObserver\n         "},"demos":[],"symbol":"Urth.JupyterKernelObserver","is":"Urth.JupyterKernelObserver","behaviors":["Urth.LoggingBehavior"],"properties":[{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN","jsdoc":{"description":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","tags":[],"orig":"*\n                 * Comma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\n                 * An empty string or unset property is interpreted no logs\n                 "}},{"name":"onKernelReady","type":"Function","desc":"\nHandler for kernel ready events. This event fires when a\nkernel is created and gets to ready state. It also triggers\n`onLoad` of the page if there is already a ready kernel.\n\n","params":[{"name":"kernel","desc":"the kernel object"}],"jsdoc":{"description":"\nHandler for kernel ready events. This event fires when a\nkernel is created and gets to ready state. It also triggers\n`onLoad` of the page if there is already a ready kernel.\n\n","tags":[{"tag":"method","type":null,"name":"onKerneReady","description":null},{"tag":"param","type":null,"name":"kernel","description":"the kernel object"}],"orig":"*\n             * Handler for kernel ready events. This event fires when a\n             * kernel is created and gets to ready state. It also triggers\n             * `onLoad` of the page if there is already a ready kernel.\n             *\n             * @method onKerneReady\n             * @param kernel - the kernel object\n             "},"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"description":"\nLogs debug level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs debug level messages\n             * @private\n             "},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"description":"\nLogs error level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs error level messages\n             * @private\n             "},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"description":"\nLogs info level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs info level messages\n             * @private\n             "},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"description":"\nAlias method for info level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Alias method for info level messages\n             * @private\n             "},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"jsdoc":{"description":"\nInternal map representation to facilitate test\n                 ","tags":[],"orig":"*\n                 * Internal map representation to facilitate test\n                 "},"private":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"description":"\nInternal utility to determine if the message should be sent to the console\n","tags":[{"tag":"param","type":null,"name":"level","description":null},{"tag":"return","type":"boolean","description":"True if message should reach thec onsole"},{"tag":"private","type":null,"description":null}],"orig":"*\n             * Internal utility to determine if the message should be sent to the console\n             * @param level\n             * @return {boolean} True if message should reach thec onsole\n             * @private\n             "},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"description":"\nConverts the comma separated string into a map of booleans\n","tags":[{"tag":"param","type":null,"name":"log","description":null},{"tag":"return","type":"{}","description":null},{"tag":"private","type":null,"description":null}],"orig":"*\n             * Converts the comma separated string into a map of booleans\n             * @param log\n             * @return {{}}\n             * @private\n             "},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"description":"\nLogs warn level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs warn level messages\n             * @private\n             "},"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/jupyter-kernel-observer.html"},{"type":"behavior","desc":"\nBehavior that encapsulate some of the functions needed by\nIPyWidgets to properly communicate with their Kernel counterparts.\n\n","events":[],"jsdoc":{"description":"\nBehavior that encapsulate some of the functions needed by\nIPyWidgets to properly communicate with their Kernel counterparts.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.JupyterWidgetBehavior","description":null}],"orig":"*\n         * Behavior that encapsulate some of the functions needed by\n         * IPyWidgets to properly communicate with their Kernel counterparts.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.JupyterWidgetBehavior\n         "},"demos":[],"symbol":"Urth.JupyterWidgetBehaviorImpl","is":"Urth.JupyterWidgetBehavior","properties":[{"name":"createModel","type":"Function","desc":"\nCreates a backbone model and a comm connection with an instance\nof the specified kernelClass on the kernel.\n\nUpon completion, invokes `onModelReady` with the created model.\n\n","params":[{"name":"kernelClass","type":"String","desc":"A class name to instantiate kernel side."},{"name":"retryCount","type":"Number","desc":"The number of times to retry the model creation if a failure occurs."}],"jsdoc":{"description":"\nCreates a backbone model and a comm connection with an instance\nof the specified kernelClass on the kernel.\n\nUpon completion, invokes `onModelReady` with the created model.\n\n","tags":[{"tag":"method","type":null,"name":"createModel","description":null},{"tag":"param","type":"String","name":"kernelClass","description":"A class name to instantiate kernel side."},{"tag":"param","type":"Number","name":"retryCount","description":"The number of times to retry the model creation if a failure occurs."}],"orig":"*\n             * Creates a backbone model and a comm connection with an instance\n             * of the specified kernelClass on the kernel.\n             *\n             * Upon completion, invokes `onModelReady` with the created model.\n             *\n             * @method createModel\n             * @param {String} kernelClass A class name to instantiate kernel side.\n             * @param {Number} retryCount The number of times to retry the model creation if a failure occurs.\n             "},"function":true},{"name":"getModelStatusMsg","type":"Function","desc":"\nreturns the model's __status__ object,\nso elements who has this behavior can check for error if __status__.status is \"error\"\n\n","params":[],"jsdoc":{"description":"\nreturns the model's __status__ object,\nso elements who has this behavior can check for error if __status__.status is \"error\"\n\n","tags":[{"tag":"method","type":null,"name":"getModelStatusMsg","description":null}],"orig":"*\n             * returns the model's __status__ object,\n             * so elements who has this behavior can check for error if __status__.status is \"error\"\n             *\n             * @method getModelStatusMsg\n             "},"function":true},{"name":"isConnected","type":"Function","desc":"\nReturns the state of the connection to the kernel side proxy.\n\n","params":[],"jsdoc":{"description":"\nReturns the state of the connection to the kernel side proxy.\n\n","tags":[{"tag":"method","type":null,"name":"isConnected","description":null},{"tag":"return","type":"Boolean","description":"Returns `true` if the element is able to communicate with the\n                 kernel side proxy."}],"orig":"*\n             * Returns the state of the connection to the kernel side proxy.\n             *\n             * @method isConnected\n             * @return {Boolean} Returns `true` if the element is able to communicate with the\n             *                  kernel side proxy.\n             "},"function":true,"return":{"type":"Boolean","desc":"Returns `true` if the element is able to communicate with the\n                 kernel side proxy."}},{"name":"onModel__status__Change","type":"Function","desc":"\nClears or displays error messages according to the status\nsent from the kernel. The status is \"ok\" when execution was\nsuccessful, and \"error\" when an error occurred.\n             ","params":[{"name":"newVal"}],"jsdoc":{"description":"\nClears or displays error messages according to the status\nsent from the kernel. The status is \"ok\" when execution was\nsuccessful, and \"error\" when an error occurred.\n             ","tags":[],"orig":"*\n             * Clears or displays error messages according to the status\n             * sent from the kernel. The status is \"ok\" when execution was\n             * successful, and \"error\" when an error occurred.\n             "},"function":true},{"name":"onModelChange","type":"Function","desc":"\nNotification handler for changes to the model. This is a general handler that\nwill be called when one or more model properties are changed. If interested in\nonly a particular property, a client can define a function with the following name:\n\n`onModel<property_name>Change`, where `<property_name>` is camel case capitalized.\nFor example, a change to property `foo` will call a method with name `onModelFooChange`.\n\n","params":[{"name":"options","type":"Object","desc":null}],"jsdoc":{"description":"\nNotification handler for changes to the model. This is a general handler that\nwill be called when one or more model properties are changed. If interested in\nonly a particular property, a client can define a function with the following name:\n\n`onModel<property_name>Change`, where `<property_name>` is camel case capitalized.\nFor example, a change to property `foo` will call a method with name `onModelFooChange`.\n\n","tags":[{"tag":"method","type":null,"name":"onModelChange","description":null},{"tag":"param","type":"Object","name":"options","description":null}],"orig":"*\n             * Notification handler for changes to the model. This is a general handler that\n             * will be called when one or more model properties are changed. If interested in\n             * only a particular property, a client can define a function with the following name:\n             *\n             * `onModel<property_name>Change`, where `<property_name>` is camel case capitalized.\n             * For example, a change to property `foo` will call a method with name `onModelFooChange`.\n             *\n             * @method onModelChange\n             * @param {Object} options\n             "},"function":true},{"name":"onModelReady","type":"Function","desc":"\nNotification handler invoked when the model is ready.\n\n","params":[],"jsdoc":{"description":"\nNotification handler invoked when the model is ready.\n\n","tags":[{"tag":"method","type":null,"name":"onModelReady","description":null}],"orig":"*\n             * Notification handler invoked when the model is ready.\n             *\n             * @method onModelReady\n             "},"function":true},{"name":"parentCell","type":"Function","desc":"\nReturns the parent Code cell that may contain this element.\n\nNote: Not all element will be under a code cell, so this might return null.\n\n","params":[],"jsdoc":{"description":"\nReturns the parent Code cell that may contain this element.\n\nNote: Not all element will be under a code cell, so this might return null.\n\n","tags":[],"orig":"*\n             * Returns the parent Code cell that may contain this element.\n             *\n             * Note: Not all element will be under a code cell, so this might return null.\n             *\n             * @method: parentCell\n             * @return {CodeCell| Returns the CodeCell that is the parent of this element or null if element is somewhere else\n             "},"function":true},{"name":"send","type":"Function","desc":"\nSends a message to the kernel side proxy of this element. A promise is returned to notify when the message\nhad been processed by the kernel (i.e. status back to idle). It is not intended to get data, rather meant\nto allow clients to throttle messages.\n\n","params":[{"name":"msg","type":"Object","desc":"A json message."},{"name":"timeout","type":"Number","desc":"The time in (milliseconds) to wait for a response before rejecting the promise. If not set, the promise may never be rejected."}],"jsdoc":{"description":"\nSends a message to the kernel side proxy of this element. A promise is returned to notify when the message\nhad been processed by the kernel (i.e. status back to idle). It is not intended to get data, rather meant\nto allow clients to throttle messages.\n\n","tags":[{"tag":"method","type":null,"name":"send","description":null},{"tag":"param","type":"Object","name":"msg","description":"A json message."},{"tag":"param","type":"Number","name":"timeout","description":"The time in (milliseconds) to wait for a response before rejecting the promise. If not set, the promise may never be rejected."},{"tag":"return","type":"Promise","description":null}],"orig":"*\n             * Sends a message to the kernel side proxy of this element. A promise is returned to notify when the message\n             * had been processed by the kernel (i.e. status back to idle). It is not intended to get data, rather meant\n             * to allow clients to throttle messages.\n             *\n             * @method send\n             * @param {Object} msg A json message.\n             * @param {Number} timeout The time in (milliseconds) to wait for a response before rejecting the promise. If not set, the promise may never be rejected.\n             * @return {Promise}\n             "},"function":true,"return":{"type":"Promise","desc":null}},{"name":"sync","type":"Function","desc":"\nSynchronizes the state provided with the kernel side proxy of this element.\n\n","params":[{"name":"values","type":"Object","desc":"An object containing the state to synchronize.\n                The keys match properties on the kernel side proxy."}],"jsdoc":{"description":"\nSynchronizes the state provided with the kernel side proxy of this element.\n\n","tags":[{"tag":"method","type":null,"name":"sync","description":null},{"tag":"param","type":"Object","name":"values","description":"An object containing the state to synchronize.\n                The keys match properties on the kernel side proxy."}],"orig":"*\n             * Synchronizes the state provided with the kernel side proxy of this element.\n             *\n             * @method sync\n             * @param {Object} values An object containing the state to synchronize.\n             *                 The keys match properties on the kernel side proxy.\n             "},"function":true},{"name":"_callbacks","type":"Function","params":[],"private":true,"function":true},{"name":"_doCreateModel","type":"Function","params":[],"private":true,"function":true},{"name":"_handleCommDisconnect","type":"Function","params":[],"private":true,"function":true},{"name":"_isCommDisposed","type":"Function","desc":"\nDetermine if the comm object is disposed (closed). This function works with both\nlegacy and jupyter-js-services' comm objects.\n","params":[{"name":"comm","type":"(IComm|Comm)","desc":null}],"jsdoc":{"description":"\nDetermine if the comm object is disposed (closed). This function works with both\nlegacy and jupyter-js-services' comm objects.\n","tags":[{"tag":"param","type":"(IComm|Comm)","name":"comm","description":null},{"tag":"return","type":"boolean","description":null}],"orig":"*\n             * Determine if the comm object is disposed (closed). This function works with both\n             * legacy and jupyter-js-services' comm objects.\n             * @param  {IComm|Comm} comm\n             * @return {boolean}\n             "},"private":true,"function":true,"return":{"type":"boolean","desc":null}},{"name":"_onModelChange","type":"Function","params":[{"name":"options"}],"private":true,"function":true},{"name":"_retryCreateModel","type":"Function","params":[],"private":true,"function":true},{"name":"_unRegisterModelCallbacks","type":"Function","desc":"\nUnregister event callbacks associated with the model.\n             ","params":[],"jsdoc":{"description":"\nUnregister event callbacks associated with the model.\n             ","tags":[],"orig":"*\n             * Unregister event callbacks associated with the model.\n             "},"private":true,"function":true},{"name":"_unRegisterNotebookCallbacks","type":"Function","desc":"\nUnregister event callbacks associated with the notebook.\n             ","params":[],"jsdoc":{"description":"\nUnregister event callbacks associated with the notebook.\n             ","tags":[],"orig":"*\n             * Unregister event callbacks associated with the notebook.\n             "},"private":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/jupyter-widget-behavior.html"},{"type":"behavior","desc":"\nBehavior for logging. It redefines the logging methods in Polymer.Base to\ncontrol their invocation based on the log levels set in the `log` property.\nSetting the `log` property to a comma separated list of levels turns on that particular\nlevel. By default, no logs are sent to the console. A global override to turn on all logs\nis available by setting `Urth.debug` to `true`.\n\n","events":[],"jsdoc":{"description":"\nBehavior for logging. It redefines the logging methods in Polymer.Base to\ncontrol their invocation based on the log levels set in the `log` property.\nSetting the `log` property to a comma separated list of levels turns on that particular\nlevel. By default, no logs are sent to the console. A global override to turn on all logs\nis available by setting `Urth.debug` to `true`.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.LoggingBehavior","description":null}],"orig":"*\n         * Behavior for logging. It redefines the logging methods in Polymer.Base to\n         * control their invocation based on the log levels set in the `log` property.\n         * Setting the `log` property to a comma separated list of levels turns on that particular\n         * level. By default, no logs are sent to the console. A global override to turn on all logs\n         * is available by setting `Urth.debug` to `true`.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.LoggingBehavior\n         "},"demos":[],"symbol":"Urth.LoggingBehavior","is":"Urth.LoggingBehavior","properties":[{"name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN","jsdoc":{"description":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","tags":[],"orig":"*\n                 * Comma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\n                 * An empty string or unset property is interpreted no logs\n                 "}},{"name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"description":"\nLogs debug level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs debug level messages\n             * @private\n             "},"private":true,"function":true},{"name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"description":"\nLogs error level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs error level messages\n             * @private\n             "},"private":true,"function":true},{"name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"description":"\nLogs info level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs info level messages\n             * @private\n             "},"private":true,"function":true},{"name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"description":"\nAlias method for info level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Alias method for info level messages\n             * @private\n             "},"private":true,"function":true},{"name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"jsdoc":{"description":"\nInternal map representation to facilitate test\n                 ","tags":[],"orig":"*\n                 * Internal map representation to facilitate test\n                 "},"private":true},{"name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"description":"\nInternal utility to determine if the message should be sent to the console\n","tags":[{"tag":"param","type":null,"name":"level","description":null},{"tag":"return","type":"boolean","description":"True if message should reach thec onsole"},{"tag":"private","type":null,"description":null}],"orig":"*\n             * Internal utility to determine if the message should be sent to the console\n             * @param level\n             * @return {boolean} True if message should reach thec onsole\n             * @private\n             "},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"description":"\nConverts the comma separated string into a map of booleans\n","tags":[{"tag":"param","type":null,"name":"log","description":null},{"tag":"return","type":"{}","description":null},{"tag":"private","type":null,"description":null}],"orig":"*\n             * Converts the comma separated string into a map of booleans\n             * @param log\n             * @return {{}}\n             * @private\n             "},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"description":"\nLogs warn level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs warn level messages\n             * @private\n             "},"private":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/logging-behavior.html"},{"type":"behavior","desc":"\nBehavior that encapsulate some of the functions needed by\nboth urth-core and urth-viz elements.\n\n","events":[],"jsdoc":{"description":"\nBehavior that encapsulate some of the functions needed by\nboth urth-core and urth-viz elements.\n\n","tags":[{"tag":"polymerBehavior","type":null,"name":"Urth.DisplayErrorBehavior","description":null}],"orig":"*\n         * Behavior that encapsulate some of the functions needed by\n         * both urth-core and urth-viz elements.\n         *\n         * @polymerBehavior Urth.DisplayErrorBehavior\n         "},"demos":[],"symbol":"Urth.DisplayErrorBehavior","is":"Urth.DisplayErrorBehavior","properties":[{"name":"displayErrorMessage","type":"Function","desc":"\nDisplays the given error message in the output area associated\nwith this widget.\n\n","params":[{"name":"msg"}],"jsdoc":{"description":"\nDisplays the given error message in the output area associated\nwith this widget.\n\n","tags":[{"tag":"method","type":null,"name":"displayErrorMessage","description":null},{"tag":"param","type":null,"name":"String","description":"msg"}],"orig":"*\n             * Displays the given error message in the output area associated\n             * with this widget.\n             *\n             * @method displayErrorMessage\n             * @param String msg\n             "},"function":true},{"name":"_clearErrorMessages","type":"Function","params":[],"private":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/error-display-behavior.html"},{"type":"behavior","desc":"\nBehavior that contains a set of utility methods that can be shared by\nquery elements.\n\n","events":[],"jsdoc":{"description":"\nBehavior that contains a set of utility methods that can be shared by\nquery elements.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.QueryBehavior","description":null}],"orig":"*\n         * Behavior that contains a set of utility methods that can be shared by\n         * query elements.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.QueryBehavior\n         "},"demos":[],"symbol":"Urth.QueryBehavior","is":"Urth.QueryBehavior","properties":[{"name":"_toStringOrArray","type":"Function","desc":"\nTakes a comma separated string and return a single String value is one element or an array of Strings\n","params":[{"name":"commaStr","desc":null}],"jsdoc":{"description":"\nTakes a comma separated string and return a single String value is one element or an array of Strings\n","tags":[{"tag":"param","type":null,"name":"commaStr","description":null},{"tag":"private","type":null,"description":null}],"orig":"*\n             * Takes a comma separated string and return a single String value is one element or an array of Strings\n             * @param commaStr\n             * @private\n             "},"private":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-dataframe/urth-core-query-behavior.html"},{"type":"behavior","desc":"\nBehavior that allows a Polymer element to define new properties at runtime. To\nsupport this, several methods from Polymer.Bind were copied and redefined.\n\n","events":[],"jsdoc":{"description":"\nBehavior that allows a Polymer element to define new properties at runtime. To\nsupport this, several methods from Polymer.Bind were copied and redefined.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.DynamicPropertiesBehavior","description":null}],"orig":"*\n         * Behavior that allows a Polymer element to define new properties at runtime. To\n         * support this, several methods from Polymer.Bind were copied and redefined.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.DynamicPropertiesBehavior\n         "},"demos":[],"symbol":"Urth.DynamicPropertiesBehavior","is":"Urth.DynamicPropertiesBehavior","properties":[{"name":"resetDynamicProperties","type":"Function","desc":"\nRemoves all dynamic properties added to this element.\n\n","params":[],"jsdoc":{"description":"\nRemoves all dynamic properties added to this element.\n\n","tags":[{"tag":"method","type":null,"name":"resetDynamicProperties","description":null}],"orig":"*\n             * Removes all dynamic properties added to this element.\n             *\n             * @method resetDynamicProperties\n             "},"function":true},{"name":"setDynamicProperties","type":"Function","desc":"\nSets the specified properties to this instance of an element. The\ndynProps parameter is in the same format as the `properties` object used\nin defining new Polymer elements.\n\n","params":[{"name":"dynProps","desc":"Object with properties to set"}],"jsdoc":{"description":"\nSets the specified properties to this instance of an element. The\ndynProps parameter is in the same format as the `properties` object used\nin defining new Polymer elements.\n\n","tags":[{"tag":"param","type":null,"name":"dynProps","description":"Object with properties to set"},{"tag":"method","type":null,"name":"setDynamicProperties","description":null}],"orig":"*\n             * Sets the specified properties to this instance of an element. The\n             * dynProps parameter is in the same format as the `properties` object used\n             * in defining new Polymer elements.\n             *\n             * @param dynProps - Object with properties to set\n             * @method setDynamicProperties\n             "},"function":true},{"name":"__complexObserver","type":"Function","desc":"\nGeneric complex observer to handle changes within arrays and objects\n             ","params":[{"name":"rec"}],"jsdoc":{"description":"\nGeneric complex observer to handle changes within arrays and objects\n             ","tags":[],"orig":"\n             * Generic complex observer to handle changes within arrays and objects\n             "},"private":true,"function":true},{"name":"__createAccessors","type":"Function","desc":"\nModified to add `configurable` to the descriptor object to allow for\ndeletion of dynamically added properties.\nsee http://stackoverflow.com/questions/7141210/how-do-i-undo-a-object-defineproperty-call\n             ","params":[{"name":"property"},{"name":"effects"}],"jsdoc":{"description":"\nModified to add `configurable` to the descriptor object to allow for\ndeletion of dynamically added properties.\nsee http://stackoverflow.com/questions/7141210/how-do-i-undo-a-object-defineproperty-call\n             ","tags":[],"orig":"\n             * Modified to add `configurable` to the descriptor object to allow for\n             * deletion of dynamically added properties.\n             * see http://stackoverflow.com/questions/7141210/how-do-i-undo-a-object-defineproperty-call\n             "},"private":true,"function":true},{"name":"__createBindings","type":"Function","desc":"\nModified from Polymer.Bind.createBindings to allow only createBindings the\ngiven properties and to call our __createAccessors function.\n             ","params":[{"name":"dynProps"}],"jsdoc":{"description":"\nModified from Polymer.Bind.createBindings to allow only createBindings the\ngiven properties and to call our __createAccessors function.\n             ","tags":[],"orig":"\n             * Modified from Polymer.Bind.createBindings to allow only createBindings the\n             * given properties and to call our __createAccessors function.\n             "},"private":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/dynamic-properties-behavior.html"},{"type":"behavior","desc":"\nBehavior that contains notebook related properties\n\n","events":[],"jsdoc":{"description":"\nBehavior that contains notebook related properties\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.JupyterNotebookEnv","description":null}],"orig":"*\n         * Behavior that contains notebook related properties\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.JupyterNotebookEnv\n         "},"demos":[],"symbol":"Urth.JupyterNotebookEnv","is":"Urth.JupyterNotebookEnv","properties":[{"name":"_baseURL","type":"Object","published":true,"default":"UNKNOWN","private":true},{"name":"_importBaseURL","type":"Object","published":true,"default":"url","private":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/jupyter-notebook-env.html"},{"type":"behavior","desc":"\nBehavior that encapsulates some of the properties and functions\nneeded by visualization elements.\n\n","events":[{"desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"jsdoc":{"description":"\nBehavior that encapsulates some of the properties and functions\nneeded by visualization elements.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"polymerBehavior","type":null,"name":"Urth.VizChartCommonBehavior","description":null}],"orig":"*\n         * Behavior that encapsulates some of the properties and functions\n         * needed by visualization elements.\n         *\n         * @group Urth Viz\n         * @polymerBehavior Urth.VizChartCommonBehavior\n         "},"demos":[],"symbol":"Urth.VizChartCommonBehaviorImpl","is":"Urth.VizChartCommonBehavior","properties":[{"name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update","jsdoc":{"description":"\nArray of column names.\n                 ","tags":[],"orig":"*\n                 * Array of column names.\n                 "}},{"name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true,"jsdoc":{"description":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","tags":[],"orig":"*\n                 * A computed Array value based on `datarows`, `columns`,\n                 * `primary`, `secondary` and `type` properties.\n                 "}},{"name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update","jsdoc":{"description":"\nAn array representing data.\n                 ","tags":[],"orig":"*\n                 * An array representing data.\n                 "}},{"name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true,"jsdoc":{"description":"\nHeight, in pixels\n                 ","tags":[],"orig":"*\n                 * Height, in pixels\n                 "}},{"name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true,"jsdoc":{"description":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","tags":[],"orig":"*\n                 * Margin, specified as JSON with the following properties: top, right, bottom, left\n                 "}},{"name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN","jsdoc":{"description":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","tags":[],"orig":"*\n                 * Allows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 "}},{"name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true,"jsdoc":{"description":"\nList of colors to override the default palette.\n                 ","tags":[],"orig":"*\n                 * List of colors to override the default palette.\n                 "}},{"name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update","jsdoc":{"description":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","tags":[],"orig":"*\n                 * References the nth column in datarows, typically used to\n                 * identify independent or input (e.g. x axis).\n                 "}},{"name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true,"jsdoc":{"description":"\nAngle in degrees to rotate labels on the X axis.\n                 ","tags":[],"orig":"*\n                 * Angle in degrees to rotate labels on the X axis.\n                 "}},{"name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update","jsdoc":{"description":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","tags":[],"orig":"*\n                 * References the nth column in datarows, typically used to\n                 * identify dependent or output (e.g. y axis).\n                 "}},{"name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false,"jsdoc":{"description":"\nWhether to stagger the layout of labels on the X axis.\n                 ","tags":[],"orig":"*\n                 * Whether to stagger the layout of labels on the X axis.\n                 "}},{"name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true,"jsdoc":{"description":"\nWidth, in pixels\n                 ","tags":[],"orig":"*\n                 * Width, in pixels\n                 "}},{"name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true,"jsdoc":{"description":"\nMinimum and maximum values for the x axis\n                 ","tags":[],"orig":"*\n                 * Minimum and maximum values for the x axis\n                 "}},{"name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update","jsdoc":{"description":"\nLabel for the x-axis.\n                 ","tags":[],"orig":"*\n                 * Label for the x-axis.\n                 "}},{"name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true,"jsdoc":{"description":"\nMinimum and maximum values for the y axis\n                 ","tags":[],"orig":"*\n                 * Minimum and maximum values for the y axis\n                 "}},{"name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update","jsdoc":{"description":"\nLabel for the y-axis.\n                 ","tags":[],"orig":"*\n                 * Label for the y-axis.\n                 "}},{"name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"name":"_update","type":"Function","params":[],"private":true,"function":true},{"name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-viz-chart/urth-viz-chart-common-behavior.html"},{"type":"behavior","desc":"\nBehavior that encapsulates some of the properties and functions\nneeded by visualization elements.\n\n","events":[],"jsdoc":{"description":"\nBehavior that encapsulates some of the properties and functions\nneeded by visualization elements.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"polymerBehavior","type":null,"name":"Urth.VizSelectionBehavior","description":null}],"orig":"*\n         * Behavior that encapsulates some of the properties and functions\n         * needed by visualization elements.\n         *\n         * @group Urth Viz\n         * @polymerBehavior Urth.VizSelectionBehavior\n         "},"demos":[],"symbol":"Urth.VizSelectionBehavior","is":"Urth.VizSelectionBehavior","properties":[{"name":"selection","type":"Array","desc":"\nThe data row corresponding to the currently selected row.\nReturns an Array of rows where `multiSelect` is enabled\n                 ","published":true,"default":"UNKNOWN","readOnly":true,"notify":true,"jsdoc":{"description":"\nThe data row corresponding to the currently selected row.\nReturns an Array of rows where `multiSelect` is enabled\n                 ","tags":[],"orig":"*\n                 * The data row corresponding to the currently selected row.\n                 * Returns an Array of rows where `multiSelect` is enabled\n                 "}},{"name":"selectionAsObject","type":"Boolean","desc":"\nFalse by default to return `selection` as an array of values.\nIf true, will return `selection` as an object with key-value pairs (with column names as keys).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN","jsdoc":{"description":"\nFalse by default to return `selection` as an array of values.\nIf true, will return `selection` as an object with key-value pairs (with column names as keys).\n                 ","tags":[],"orig":"*\n                 * False by default to return `selection` as an array of values.\n                 * If true, will return `selection` as an object with key-value pairs (with column names as keys).\n                 "}},{"name":"selectionIndex","type":"Array","desc":"\nThe index of the selected data row or rows, an Array of rows where 'multiSelect' is enabled\n                 ","published":true,"default":"UNKNOWN","observer":"_selectionIndexChanged","notify":true,"jsdoc":{"description":"\nThe index of the selected data row or rows, an Array of rows where 'multiSelect' is enabled\n                 ","tags":[],"orig":"*\n                 * The index of the selected data row or rows, an Array of rows where 'multiSelect' is enabled\n                 "}},{"name":"selectionInfo","type":"Array","desc":"\nObject containing UI information based on the current selection.\nReturns an Array of Objects where `multiSelect` is enabled.\n                 ","published":true,"default":"UNKNOWN","readOnly":true,"notify":true,"jsdoc":{"description":"\nObject containing UI information based on the current selection.\nReturns an Array of Objects where `multiSelect` is enabled.\n                 ","tags":[],"orig":"*\n                 * Object containing UI information based on the current selection.\n                 * Returns an Array of Objects where `multiSelect` is enabled.\n                 "}}],"observers":[],"contentHref":"bower_components/urth-viz-behaviors/urth-viz-selection-behavior.html"}],"behaviorsByName":{"Urth.JupyterSaveBehavior":{"type":"behavior","desc":"\nBehavior that provides registration with the save event. Elements\nthat implement this behavior must implement the `onSave` method to\ndefine the element specific save procedure.\n\n","events":[],"jsdoc":{"description":"\nBehavior that provides registration with the save event. Elements\nthat implement this behavior must implement the `onSave` method to\ndefine the element specific save procedure.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.JupyterSaveBehavior","description":null}],"orig":"*\n         * Behavior that provides registration with the save event. Elements\n         * that implement this behavior must implement the `onSave` method to\n         * define the element specific save procedure.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.JupyterSaveBehavior\n         "},"demos":[],"symbol":"Urth.JupyterSaveBehavior","is":"Urth.JupyterSaveBehavior","properties":[{"name":"onSave","type":"Function","desc":"\nElement specific handler for the save event.\n\n","params":[],"jsdoc":{"description":"\nElement specific handler for the save event.\n\n","tags":[{"tag":"method","type":null,"name":"onSave","description":null}],"orig":"*\n             * Element specific handler for the save event.\n             *\n             * @method onSave\n             "},"function":true},{"name":"created","type":"Function","params":[{"name":"event"},{"name":"callback"}],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[{"name":"event"},{"name":"callback"}],"private":true,"configuration":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/jupyter-save-behavior.html"},"Urth.JupyterKernelObserver":{"type":"behavior","desc":"\nBehavior that provides pre-attached callbacks to kernel events.\n\n","events":[],"jsdoc":{"description":"\nBehavior that provides pre-attached callbacks to kernel events.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.JupyterKernelObserver","description":null}],"orig":"*\n         * Behavior that provides pre-attached callbacks to kernel events.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.JupyterKernelObserver\n         "},"demos":[],"symbol":"Urth.JupyterKernelObserver","is":"Urth.JupyterKernelObserver","behaviors":["Urth.LoggingBehavior"],"properties":[{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN","jsdoc":{"description":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","tags":[],"orig":"*\n                 * Comma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\n                 * An empty string or unset property is interpreted no logs\n                 "}},{"name":"onKernelReady","type":"Function","desc":"\nHandler for kernel ready events. This event fires when a\nkernel is created and gets to ready state. It also triggers\n`onLoad` of the page if there is already a ready kernel.\n\n","params":[{"name":"kernel","desc":"the kernel object"}],"jsdoc":{"description":"\nHandler for kernel ready events. This event fires when a\nkernel is created and gets to ready state. It also triggers\n`onLoad` of the page if there is already a ready kernel.\n\n","tags":[{"tag":"method","type":null,"name":"onKerneReady","description":null},{"tag":"param","type":null,"name":"kernel","description":"the kernel object"}],"orig":"*\n             * Handler for kernel ready events. This event fires when a\n             * kernel is created and gets to ready state. It also triggers\n             * `onLoad` of the page if there is already a ready kernel.\n             *\n             * @method onKerneReady\n             * @param kernel - the kernel object\n             "},"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"description":"\nLogs debug level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs debug level messages\n             * @private\n             "},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"description":"\nLogs error level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs error level messages\n             * @private\n             "},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"description":"\nLogs info level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs info level messages\n             * @private\n             "},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"description":"\nAlias method for info level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Alias method for info level messages\n             * @private\n             "},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"jsdoc":{"description":"\nInternal map representation to facilitate test\n                 ","tags":[],"orig":"*\n                 * Internal map representation to facilitate test\n                 "},"private":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"description":"\nInternal utility to determine if the message should be sent to the console\n","tags":[{"tag":"param","type":null,"name":"level","description":null},{"tag":"return","type":"boolean","description":"True if message should reach thec onsole"},{"tag":"private","type":null,"description":null}],"orig":"*\n             * Internal utility to determine if the message should be sent to the console\n             * @param level\n             * @return {boolean} True if message should reach thec onsole\n             * @private\n             "},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"description":"\nConverts the comma separated string into a map of booleans\n","tags":[{"tag":"param","type":null,"name":"log","description":null},{"tag":"return","type":"{}","description":null},{"tag":"private","type":null,"description":null}],"orig":"*\n             * Converts the comma separated string into a map of booleans\n             * @param log\n             * @return {{}}\n             * @private\n             "},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"description":"\nLogs warn level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs warn level messages\n             * @private\n             "},"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/jupyter-kernel-observer.html"},"Urth.JupyterWidgetBehavior":{"type":"behavior","desc":"\nBehavior that encapsulate some of the functions needed by\nIPyWidgets to properly communicate with their Kernel counterparts.\n\n","events":[],"jsdoc":{"description":"\nBehavior that encapsulate some of the functions needed by\nIPyWidgets to properly communicate with their Kernel counterparts.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.JupyterWidgetBehavior","description":null}],"orig":"*\n         * Behavior that encapsulate some of the functions needed by\n         * IPyWidgets to properly communicate with their Kernel counterparts.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.JupyterWidgetBehavior\n         "},"demos":[],"symbol":"Urth.JupyterWidgetBehaviorImpl","is":"Urth.JupyterWidgetBehavior","properties":[{"name":"createModel","type":"Function","desc":"\nCreates a backbone model and a comm connection with an instance\nof the specified kernelClass on the kernel.\n\nUpon completion, invokes `onModelReady` with the created model.\n\n","params":[{"name":"kernelClass","type":"String","desc":"A class name to instantiate kernel side."},{"name":"retryCount","type":"Number","desc":"The number of times to retry the model creation if a failure occurs."}],"jsdoc":{"description":"\nCreates a backbone model and a comm connection with an instance\nof the specified kernelClass on the kernel.\n\nUpon completion, invokes `onModelReady` with the created model.\n\n","tags":[{"tag":"method","type":null,"name":"createModel","description":null},{"tag":"param","type":"String","name":"kernelClass","description":"A class name to instantiate kernel side."},{"tag":"param","type":"Number","name":"retryCount","description":"The number of times to retry the model creation if a failure occurs."}],"orig":"*\n             * Creates a backbone model and a comm connection with an instance\n             * of the specified kernelClass on the kernel.\n             *\n             * Upon completion, invokes `onModelReady` with the created model.\n             *\n             * @method createModel\n             * @param {String} kernelClass A class name to instantiate kernel side.\n             * @param {Number} retryCount The number of times to retry the model creation if a failure occurs.\n             "},"function":true},{"name":"getModelStatusMsg","type":"Function","desc":"\nreturns the model's __status__ object,\nso elements who has this behavior can check for error if __status__.status is \"error\"\n\n","params":[],"jsdoc":{"description":"\nreturns the model's __status__ object,\nso elements who has this behavior can check for error if __status__.status is \"error\"\n\n","tags":[{"tag":"method","type":null,"name":"getModelStatusMsg","description":null}],"orig":"*\n             * returns the model's __status__ object,\n             * so elements who has this behavior can check for error if __status__.status is \"error\"\n             *\n             * @method getModelStatusMsg\n             "},"function":true},{"name":"isConnected","type":"Function","desc":"\nReturns the state of the connection to the kernel side proxy.\n\n","params":[],"jsdoc":{"description":"\nReturns the state of the connection to the kernel side proxy.\n\n","tags":[{"tag":"method","type":null,"name":"isConnected","description":null},{"tag":"return","type":"Boolean","description":"Returns `true` if the element is able to communicate with the\n                 kernel side proxy."}],"orig":"*\n             * Returns the state of the connection to the kernel side proxy.\n             *\n             * @method isConnected\n             * @return {Boolean} Returns `true` if the element is able to communicate with the\n             *                  kernel side proxy.\n             "},"function":true,"return":{"type":"Boolean","desc":"Returns `true` if the element is able to communicate with the\n                 kernel side proxy."}},{"name":"onModel__status__Change","type":"Function","desc":"\nClears or displays error messages according to the status\nsent from the kernel. The status is \"ok\" when execution was\nsuccessful, and \"error\" when an error occurred.\n             ","params":[{"name":"newVal"}],"jsdoc":{"description":"\nClears or displays error messages according to the status\nsent from the kernel. The status is \"ok\" when execution was\nsuccessful, and \"error\" when an error occurred.\n             ","tags":[],"orig":"*\n             * Clears or displays error messages according to the status\n             * sent from the kernel. The status is \"ok\" when execution was\n             * successful, and \"error\" when an error occurred.\n             "},"function":true},{"name":"onModelChange","type":"Function","desc":"\nNotification handler for changes to the model. This is a general handler that\nwill be called when one or more model properties are changed. If interested in\nonly a particular property, a client can define a function with the following name:\n\n`onModel<property_name>Change`, where `<property_name>` is camel case capitalized.\nFor example, a change to property `foo` will call a method with name `onModelFooChange`.\n\n","params":[{"name":"options","type":"Object","desc":null}],"jsdoc":{"description":"\nNotification handler for changes to the model. This is a general handler that\nwill be called when one or more model properties are changed. If interested in\nonly a particular property, a client can define a function with the following name:\n\n`onModel<property_name>Change`, where `<property_name>` is camel case capitalized.\nFor example, a change to property `foo` will call a method with name `onModelFooChange`.\n\n","tags":[{"tag":"method","type":null,"name":"onModelChange","description":null},{"tag":"param","type":"Object","name":"options","description":null}],"orig":"*\n             * Notification handler for changes to the model. This is a general handler that\n             * will be called when one or more model properties are changed. If interested in\n             * only a particular property, a client can define a function with the following name:\n             *\n             * `onModel<property_name>Change`, where `<property_name>` is camel case capitalized.\n             * For example, a change to property `foo` will call a method with name `onModelFooChange`.\n             *\n             * @method onModelChange\n             * @param {Object} options\n             "},"function":true},{"name":"onModelReady","type":"Function","desc":"\nNotification handler invoked when the model is ready.\n\n","params":[],"jsdoc":{"description":"\nNotification handler invoked when the model is ready.\n\n","tags":[{"tag":"method","type":null,"name":"onModelReady","description":null}],"orig":"*\n             * Notification handler invoked when the model is ready.\n             *\n             * @method onModelReady\n             "},"function":true},{"name":"parentCell","type":"Function","desc":"\nReturns the parent Code cell that may contain this element.\n\nNote: Not all element will be under a code cell, so this might return null.\n\n","params":[],"jsdoc":{"description":"\nReturns the parent Code cell that may contain this element.\n\nNote: Not all element will be under a code cell, so this might return null.\n\n","tags":[],"orig":"*\n             * Returns the parent Code cell that may contain this element.\n             *\n             * Note: Not all element will be under a code cell, so this might return null.\n             *\n             * @method: parentCell\n             * @return {CodeCell| Returns the CodeCell that is the parent of this element or null if element is somewhere else\n             "},"function":true},{"name":"send","type":"Function","desc":"\nSends a message to the kernel side proxy of this element. A promise is returned to notify when the message\nhad been processed by the kernel (i.e. status back to idle). It is not intended to get data, rather meant\nto allow clients to throttle messages.\n\n","params":[{"name":"msg","type":"Object","desc":"A json message."},{"name":"timeout","type":"Number","desc":"The time in (milliseconds) to wait for a response before rejecting the promise. If not set, the promise may never be rejected."}],"jsdoc":{"description":"\nSends a message to the kernel side proxy of this element. A promise is returned to notify when the message\nhad been processed by the kernel (i.e. status back to idle). It is not intended to get data, rather meant\nto allow clients to throttle messages.\n\n","tags":[{"tag":"method","type":null,"name":"send","description":null},{"tag":"param","type":"Object","name":"msg","description":"A json message."},{"tag":"param","type":"Number","name":"timeout","description":"The time in (milliseconds) to wait for a response before rejecting the promise. If not set, the promise may never be rejected."},{"tag":"return","type":"Promise","description":null}],"orig":"*\n             * Sends a message to the kernel side proxy of this element. A promise is returned to notify when the message\n             * had been processed by the kernel (i.e. status back to idle). It is not intended to get data, rather meant\n             * to allow clients to throttle messages.\n             *\n             * @method send\n             * @param {Object} msg A json message.\n             * @param {Number} timeout The time in (milliseconds) to wait for a response before rejecting the promise. If not set, the promise may never be rejected.\n             * @return {Promise}\n             "},"function":true,"return":{"type":"Promise","desc":null}},{"name":"sync","type":"Function","desc":"\nSynchronizes the state provided with the kernel side proxy of this element.\n\n","params":[{"name":"values","type":"Object","desc":"An object containing the state to synchronize.\n                The keys match properties on the kernel side proxy."}],"jsdoc":{"description":"\nSynchronizes the state provided with the kernel side proxy of this element.\n\n","tags":[{"tag":"method","type":null,"name":"sync","description":null},{"tag":"param","type":"Object","name":"values","description":"An object containing the state to synchronize.\n                The keys match properties on the kernel side proxy."}],"orig":"*\n             * Synchronizes the state provided with the kernel side proxy of this element.\n             *\n             * @method sync\n             * @param {Object} values An object containing the state to synchronize.\n             *                 The keys match properties on the kernel side proxy.\n             "},"function":true},{"name":"_callbacks","type":"Function","params":[],"private":true,"function":true},{"name":"_doCreateModel","type":"Function","params":[],"private":true,"function":true},{"name":"_handleCommDisconnect","type":"Function","params":[],"private":true,"function":true},{"name":"_isCommDisposed","type":"Function","desc":"\nDetermine if the comm object is disposed (closed). This function works with both\nlegacy and jupyter-js-services' comm objects.\n","params":[{"name":"comm","type":"(IComm|Comm)","desc":null}],"jsdoc":{"description":"\nDetermine if the comm object is disposed (closed). This function works with both\nlegacy and jupyter-js-services' comm objects.\n","tags":[{"tag":"param","type":"(IComm|Comm)","name":"comm","description":null},{"tag":"return","type":"boolean","description":null}],"orig":"*\n             * Determine if the comm object is disposed (closed). This function works with both\n             * legacy and jupyter-js-services' comm objects.\n             * @param  {IComm|Comm} comm\n             * @return {boolean}\n             "},"private":true,"function":true,"return":{"type":"boolean","desc":null}},{"name":"_onModelChange","type":"Function","params":[{"name":"options"}],"private":true,"function":true},{"name":"_retryCreateModel","type":"Function","params":[],"private":true,"function":true},{"name":"_unRegisterModelCallbacks","type":"Function","desc":"\nUnregister event callbacks associated with the model.\n             ","params":[],"jsdoc":{"description":"\nUnregister event callbacks associated with the model.\n             ","tags":[],"orig":"*\n             * Unregister event callbacks associated with the model.\n             "},"private":true,"function":true},{"name":"_unRegisterNotebookCallbacks","type":"Function","desc":"\nUnregister event callbacks associated with the notebook.\n             ","params":[],"jsdoc":{"description":"\nUnregister event callbacks associated with the notebook.\n             ","tags":[],"orig":"*\n             * Unregister event callbacks associated with the notebook.\n             "},"private":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/jupyter-widget-behavior.html"},"Urth.LoggingBehavior":{"type":"behavior","desc":"\nBehavior for logging. It redefines the logging methods in Polymer.Base to\ncontrol their invocation based on the log levels set in the `log` property.\nSetting the `log` property to a comma separated list of levels turns on that particular\nlevel. By default, no logs are sent to the console. A global override to turn on all logs\nis available by setting `Urth.debug` to `true`.\n\n","events":[],"jsdoc":{"description":"\nBehavior for logging. It redefines the logging methods in Polymer.Base to\ncontrol their invocation based on the log levels set in the `log` property.\nSetting the `log` property to a comma separated list of levels turns on that particular\nlevel. By default, no logs are sent to the console. A global override to turn on all logs\nis available by setting `Urth.debug` to `true`.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.LoggingBehavior","description":null}],"orig":"*\n         * Behavior for logging. It redefines the logging methods in Polymer.Base to\n         * control their invocation based on the log levels set in the `log` property.\n         * Setting the `log` property to a comma separated list of levels turns on that particular\n         * level. By default, no logs are sent to the console. A global override to turn on all logs\n         * is available by setting `Urth.debug` to `true`.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.LoggingBehavior\n         "},"demos":[],"symbol":"Urth.LoggingBehavior","is":"Urth.LoggingBehavior","properties":[{"name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN","jsdoc":{"description":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","tags":[],"orig":"*\n                 * Comma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\n                 * An empty string or unset property is interpreted no logs\n                 "}},{"name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"description":"\nLogs debug level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs debug level messages\n             * @private\n             "},"private":true,"function":true},{"name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"description":"\nLogs error level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs error level messages\n             * @private\n             "},"private":true,"function":true},{"name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"description":"\nLogs info level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs info level messages\n             * @private\n             "},"private":true,"function":true},{"name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"description":"\nAlias method for info level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Alias method for info level messages\n             * @private\n             "},"private":true,"function":true},{"name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"jsdoc":{"description":"\nInternal map representation to facilitate test\n                 ","tags":[],"orig":"*\n                 * Internal map representation to facilitate test\n                 "},"private":true},{"name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"description":"\nInternal utility to determine if the message should be sent to the console\n","tags":[{"tag":"param","type":null,"name":"level","description":null},{"tag":"return","type":"boolean","description":"True if message should reach thec onsole"},{"tag":"private","type":null,"description":null}],"orig":"*\n             * Internal utility to determine if the message should be sent to the console\n             * @param level\n             * @return {boolean} True if message should reach thec onsole\n             * @private\n             "},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"description":"\nConverts the comma separated string into a map of booleans\n","tags":[{"tag":"param","type":null,"name":"log","description":null},{"tag":"return","type":"{}","description":null},{"tag":"private","type":null,"description":null}],"orig":"*\n             * Converts the comma separated string into a map of booleans\n             * @param log\n             * @return {{}}\n             * @private\n             "},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"description":"\nLogs warn level messages\n","tags":[{"tag":"private","type":null,"description":null}],"orig":"*\n             * Logs warn level messages\n             * @private\n             "},"private":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/logging-behavior.html"},"Urth.DisplayErrorBehavior":{"type":"behavior","desc":"\nBehavior that encapsulate some of the functions needed by\nboth urth-core and urth-viz elements.\n\n","events":[],"jsdoc":{"description":"\nBehavior that encapsulate some of the functions needed by\nboth urth-core and urth-viz elements.\n\n","tags":[{"tag":"polymerBehavior","type":null,"name":"Urth.DisplayErrorBehavior","description":null}],"orig":"*\n         * Behavior that encapsulate some of the functions needed by\n         * both urth-core and urth-viz elements.\n         *\n         * @polymerBehavior Urth.DisplayErrorBehavior\n         "},"demos":[],"symbol":"Urth.DisplayErrorBehavior","is":"Urth.DisplayErrorBehavior","properties":[{"name":"displayErrorMessage","type":"Function","desc":"\nDisplays the given error message in the output area associated\nwith this widget.\n\n","params":[{"name":"msg"}],"jsdoc":{"description":"\nDisplays the given error message in the output area associated\nwith this widget.\n\n","tags":[{"tag":"method","type":null,"name":"displayErrorMessage","description":null},{"tag":"param","type":null,"name":"String","description":"msg"}],"orig":"*\n             * Displays the given error message in the output area associated\n             * with this widget.\n             *\n             * @method displayErrorMessage\n             * @param String msg\n             "},"function":true},{"name":"_clearErrorMessages","type":"Function","params":[],"private":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/error-display-behavior.html"},"Urth.QueryBehavior":{"type":"behavior","desc":"\nBehavior that contains a set of utility methods that can be shared by\nquery elements.\n\n","events":[],"jsdoc":{"description":"\nBehavior that contains a set of utility methods that can be shared by\nquery elements.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.QueryBehavior","description":null}],"orig":"*\n         * Behavior that contains a set of utility methods that can be shared by\n         * query elements.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.QueryBehavior\n         "},"demos":[],"symbol":"Urth.QueryBehavior","is":"Urth.QueryBehavior","properties":[{"name":"_toStringOrArray","type":"Function","desc":"\nTakes a comma separated string and return a single String value is one element or an array of Strings\n","params":[{"name":"commaStr","desc":null}],"jsdoc":{"description":"\nTakes a comma separated string and return a single String value is one element or an array of Strings\n","tags":[{"tag":"param","type":null,"name":"commaStr","description":null},{"tag":"private","type":null,"description":null}],"orig":"*\n             * Takes a comma separated string and return a single String value is one element or an array of Strings\n             * @param commaStr\n             * @private\n             "},"private":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-dataframe/urth-core-query-behavior.html"},"Urth.DynamicPropertiesBehavior":{"type":"behavior","desc":"\nBehavior that allows a Polymer element to define new properties at runtime. To\nsupport this, several methods from Polymer.Bind were copied and redefined.\n\n","events":[],"jsdoc":{"description":"\nBehavior that allows a Polymer element to define new properties at runtime. To\nsupport this, several methods from Polymer.Bind were copied and redefined.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.DynamicPropertiesBehavior","description":null}],"orig":"*\n         * Behavior that allows a Polymer element to define new properties at runtime. To\n         * support this, several methods from Polymer.Bind were copied and redefined.\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.DynamicPropertiesBehavior\n         "},"demos":[],"symbol":"Urth.DynamicPropertiesBehavior","is":"Urth.DynamicPropertiesBehavior","properties":[{"name":"resetDynamicProperties","type":"Function","desc":"\nRemoves all dynamic properties added to this element.\n\n","params":[],"jsdoc":{"description":"\nRemoves all dynamic properties added to this element.\n\n","tags":[{"tag":"method","type":null,"name":"resetDynamicProperties","description":null}],"orig":"*\n             * Removes all dynamic properties added to this element.\n             *\n             * @method resetDynamicProperties\n             "},"function":true},{"name":"setDynamicProperties","type":"Function","desc":"\nSets the specified properties to this instance of an element. The\ndynProps parameter is in the same format as the `properties` object used\nin defining new Polymer elements.\n\n","params":[{"name":"dynProps","desc":"Object with properties to set"}],"jsdoc":{"description":"\nSets the specified properties to this instance of an element. The\ndynProps parameter is in the same format as the `properties` object used\nin defining new Polymer elements.\n\n","tags":[{"tag":"param","type":null,"name":"dynProps","description":"Object with properties to set"},{"tag":"method","type":null,"name":"setDynamicProperties","description":null}],"orig":"*\n             * Sets the specified properties to this instance of an element. The\n             * dynProps parameter is in the same format as the `properties` object used\n             * in defining new Polymer elements.\n             *\n             * @param dynProps - Object with properties to set\n             * @method setDynamicProperties\n             "},"function":true},{"name":"__complexObserver","type":"Function","desc":"\nGeneric complex observer to handle changes within arrays and objects\n             ","params":[{"name":"rec"}],"jsdoc":{"description":"\nGeneric complex observer to handle changes within arrays and objects\n             ","tags":[],"orig":"\n             * Generic complex observer to handle changes within arrays and objects\n             "},"private":true,"function":true},{"name":"__createAccessors","type":"Function","desc":"\nModified to add `configurable` to the descriptor object to allow for\ndeletion of dynamically added properties.\nsee http://stackoverflow.com/questions/7141210/how-do-i-undo-a-object-defineproperty-call\n             ","params":[{"name":"property"},{"name":"effects"}],"jsdoc":{"description":"\nModified to add `configurable` to the descriptor object to allow for\ndeletion of dynamically added properties.\nsee http://stackoverflow.com/questions/7141210/how-do-i-undo-a-object-defineproperty-call\n             ","tags":[],"orig":"\n             * Modified to add `configurable` to the descriptor object to allow for\n             * deletion of dynamically added properties.\n             * see http://stackoverflow.com/questions/7141210/how-do-i-undo-a-object-defineproperty-call\n             "},"private":true,"function":true},{"name":"__createBindings","type":"Function","desc":"\nModified from Polymer.Bind.createBindings to allow only createBindings the\ngiven properties and to call our __createAccessors function.\n             ","params":[{"name":"dynProps"}],"jsdoc":{"description":"\nModified from Polymer.Bind.createBindings to allow only createBindings the\ngiven properties and to call our __createAccessors function.\n             ","tags":[],"orig":"\n             * Modified from Polymer.Bind.createBindings to allow only createBindings the\n             * given properties and to call our __createAccessors function.\n             "},"private":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/dynamic-properties-behavior.html"},"Urth.JupyterNotebookEnv":{"type":"behavior","desc":"\nBehavior that contains notebook related properties\n\n","events":[],"jsdoc":{"description":"\nBehavior that contains notebook related properties\n\n","tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"polymerBehavior","type":null,"name":"Urth.JupyterNotebookEnv","description":null}],"orig":"*\n         * Behavior that contains notebook related properties\n         *\n         * @group Urth Core\n         * @polymerBehavior Urth.JupyterNotebookEnv\n         "},"demos":[],"symbol":"Urth.JupyterNotebookEnv","is":"Urth.JupyterNotebookEnv","properties":[{"name":"_baseURL","type":"Object","published":true,"default":"UNKNOWN","private":true},{"name":"_importBaseURL","type":"Object","published":true,"default":"url","private":true}],"observers":[],"contentHref":"bower_components/urth-core-behaviors/jupyter-notebook-env.html"},"Urth.VizChartCommonBehavior":{"type":"behavior","desc":"\nBehavior that encapsulates some of the properties and functions\nneeded by visualization elements.\n\n","events":[{"desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"jsdoc":{"description":"\nBehavior that encapsulates some of the properties and functions\nneeded by visualization elements.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"polymerBehavior","type":null,"name":"Urth.VizChartCommonBehavior","description":null}],"orig":"*\n         * Behavior that encapsulates some of the properties and functions\n         * needed by visualization elements.\n         *\n         * @group Urth Viz\n         * @polymerBehavior Urth.VizChartCommonBehavior\n         "},"demos":[],"symbol":"Urth.VizChartCommonBehaviorImpl","is":"Urth.VizChartCommonBehavior","properties":[{"name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update","jsdoc":{"description":"\nArray of column names.\n                 ","tags":[],"orig":"*\n                 * Array of column names.\n                 "}},{"name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true,"jsdoc":{"description":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","tags":[],"orig":"*\n                 * A computed Array value based on `datarows`, `columns`,\n                 * `primary`, `secondary` and `type` properties.\n                 "}},{"name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update","jsdoc":{"description":"\nAn array representing data.\n                 ","tags":[],"orig":"*\n                 * An array representing data.\n                 "}},{"name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true,"jsdoc":{"description":"\nHeight, in pixels\n                 ","tags":[],"orig":"*\n                 * Height, in pixels\n                 "}},{"name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true,"jsdoc":{"description":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","tags":[],"orig":"*\n                 * Margin, specified as JSON with the following properties: top, right, bottom, left\n                 "}},{"name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN","jsdoc":{"description":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","tags":[],"orig":"*\n                 * Allows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 "}},{"name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true,"jsdoc":{"description":"\nList of colors to override the default palette.\n                 ","tags":[],"orig":"*\n                 * List of colors to override the default palette.\n                 "}},{"name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update","jsdoc":{"description":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","tags":[],"orig":"*\n                 * References the nth column in datarows, typically used to\n                 * identify independent or input (e.g. x axis).\n                 "}},{"name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true,"jsdoc":{"description":"\nAngle in degrees to rotate labels on the X axis.\n                 ","tags":[],"orig":"*\n                 * Angle in degrees to rotate labels on the X axis.\n                 "}},{"name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update","jsdoc":{"description":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","tags":[],"orig":"*\n                 * References the nth column in datarows, typically used to\n                 * identify dependent or output (e.g. y axis).\n                 "}},{"name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false,"jsdoc":{"description":"\nWhether to stagger the layout of labels on the X axis.\n                 ","tags":[],"orig":"*\n                 * Whether to stagger the layout of labels on the X axis.\n                 "}},{"name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true,"jsdoc":{"description":"\nWidth, in pixels\n                 ","tags":[],"orig":"*\n                 * Width, in pixels\n                 "}},{"name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true,"jsdoc":{"description":"\nMinimum and maximum values for the x axis\n                 ","tags":[],"orig":"*\n                 * Minimum and maximum values for the x axis\n                 "}},{"name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update","jsdoc":{"description":"\nLabel for the x-axis.\n                 ","tags":[],"orig":"*\n                 * Label for the x-axis.\n                 "}},{"name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true,"jsdoc":{"description":"\nMinimum and maximum values for the y axis\n                 ","tags":[],"orig":"*\n                 * Minimum and maximum values for the y axis\n                 "}},{"name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update","jsdoc":{"description":"\nLabel for the y-axis.\n                 ","tags":[],"orig":"*\n                 * Label for the y-axis.\n                 "}},{"name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"name":"_update","type":"Function","params":[],"private":true,"function":true},{"name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"observers":[],"contentHref":"bower_components/urth-viz-chart/urth-viz-chart-common-behavior.html"},"Urth.VizSelectionBehavior":{"type":"behavior","desc":"\nBehavior that encapsulates some of the properties and functions\nneeded by visualization elements.\n\n","events":[],"jsdoc":{"description":"\nBehavior that encapsulates some of the properties and functions\nneeded by visualization elements.\n\n","tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"polymerBehavior","type":null,"name":"Urth.VizSelectionBehavior","description":null}],"orig":"*\n         * Behavior that encapsulates some of the properties and functions\n         * needed by visualization elements.\n         *\n         * @group Urth Viz\n         * @polymerBehavior Urth.VizSelectionBehavior\n         "},"demos":[],"symbol":"Urth.VizSelectionBehavior","is":"Urth.VizSelectionBehavior","properties":[{"name":"selection","type":"Array","desc":"\nThe data row corresponding to the currently selected row.\nReturns an Array of rows where `multiSelect` is enabled\n                 ","published":true,"default":"UNKNOWN","readOnly":true,"notify":true,"jsdoc":{"description":"\nThe data row corresponding to the currently selected row.\nReturns an Array of rows where `multiSelect` is enabled\n                 ","tags":[],"orig":"*\n                 * The data row corresponding to the currently selected row.\n                 * Returns an Array of rows where `multiSelect` is enabled\n                 "}},{"name":"selectionAsObject","type":"Boolean","desc":"\nFalse by default to return `selection` as an array of values.\nIf true, will return `selection` as an object with key-value pairs (with column names as keys).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN","jsdoc":{"description":"\nFalse by default to return `selection` as an array of values.\nIf true, will return `selection` as an object with key-value pairs (with column names as keys).\n                 ","tags":[],"orig":"*\n                 * False by default to return `selection` as an array of values.\n                 * If true, will return `selection` as an object with key-value pairs (with column names as keys).\n                 "}},{"name":"selectionIndex","type":"Array","desc":"\nThe index of the selected data row or rows, an Array of rows where 'multiSelect' is enabled\n                 ","published":true,"default":"UNKNOWN","observer":"_selectionIndexChanged","notify":true,"jsdoc":{"description":"\nThe index of the selected data row or rows, an Array of rows where 'multiSelect' is enabled\n                 ","tags":[],"orig":"*\n                 * The index of the selected data row or rows, an Array of rows where 'multiSelect' is enabled\n                 "}},{"name":"selectionInfo","type":"Array","desc":"\nObject containing UI information based on the current selection.\nReturns an Array of Objects where `multiSelect` is enabled.\n                 ","published":true,"default":"UNKNOWN","readOnly":true,"notify":true,"jsdoc":{"description":"\nObject containing UI information based on the current selection.\nReturns an Array of Objects where `multiSelect` is enabled.\n                 ","tags":[],"orig":"*\n                 * Object containing UI information based on the current selection.\n                 * Returns an Array of Objects where `multiSelect` is enabled.\n                 "}}],"observers":[],"contentHref":"bower_components/urth-viz-behaviors/urth-viz-selection-behavior.html"}},"elements":[{"type":"element","desc":"\nCreates a Polymer element that displays urth elements documentation page.\n\n","events":[],"properties":[{"name":"docURL","type":"String","published":true},{"name":"getDocUrl","type":"Function","params":[],"function":true},{"__fromBehavior":"Urth.JupyterNotebookEnv","name":"_baseURL","type":"Object","published":true,"default":"UNKNOWN","private":true},{"__fromBehavior":"Urth.JupyterNotebookEnv","name":"_importBaseURL","type":"Object","published":true,"default":"url","private":true}],"behaviors":["Urth.JupyterNotebookEnv"],"observers":[],"is":"urth-help","contentHref":"bower_components/urth-help/urth-help.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-help"}]},"demos":[]},{"type":"element","desc":"\nProvides a mechanism to enable [Polymer binding](https://www.polymer-project.org/1.0/docs/devguide/data-binding.html)\nfeatures between elements across a common data channel. Property updates within\nan `urth-core-bind` template are synchronized with other `urth-core-bind` templates\nto update all related bindings.\n\nExample: _Specifying a value in the input box will update the value in the `span`_\n\n```html\n<template is='urth-core-bind'>\n    <div>Hello <span>{{user}}</span></div>\n</template>\n\n<template is='urth-core-bind'>\n    <input value={{user::input}}></input>\n</template>\n```\n\nBy default, `urth-core-bind` will wait to render the template until all\npreceding `urth-core-import` dependencies have completed. Set the `no-wait`\nattribute on the element to ignore dependencies and render immediately.\n\nExample: _Do not wait for dependencies to load before rendering._\n\n```html\n<template is='urth-core-bind' no-wait>\n    <div>Hello <span>{{user}}</span></div>\n</template>\n```\n\n","events":[{"desc":"\nFired when DOM is stamped by this template.\n\n","jsdoc":{"description":"\nFired when DOM is stamped by this template.\n\n","tags":[{"tag":"event","type":null,"description":"dom-change"}],"orig":"*\n             * Fired when DOM is stamped by this template.\n             *\n             * @event dom-change\n             "},"name":"dom-change","params":[]}],"properties":[{"name":"channel","type":"String","desc":"\nThe name of the channel to use for data binding.\n                 ","published":true,"observer":"_onChannelChange"},{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"noWait","type":"Boolean","desc":"\nDetermines whether to wait for dependencies to load before\nrendering. Set to `true` to render immediately and not wait.\n                 ","published":true,"reflectToAttribute":"UNKNOWN"},{"name":"showLoadingMsg","type":"Function","params":[{"name":"show"}],"function":true},{"name":"_createChannel","type":"Function","params":[],"private":true,"function":true},{"name":"_customRender","type":"Function","desc":"\nInvoked by DomBindBehavior on `attached`. Used to delay rendering\nuntil after dependencies have loaded if `noWait` is not\ntrue.\n             ","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"name":"_onChannelChange","type":"Function","params":[{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"name":"_propertyChanged","type":"Function","params":[{"name":"property"},{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"extends","type":"string","private":true,"configuration":true}],"behaviors":["Urth.DomBindBehavior","Urth.LoggingBehavior"],"observers":[],"is":"urth-core-bind","contentHref":"bower_components/urth-core-bind/urth-core-bind.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-bind"}]},"demos":[]},{"type":"element","desc":"\nThis element represents a DataFrame. The `ref` property points to an instance of a DataFrame in the\nkernel. Currently, there is support for:\n\nPandas DataFrame\nPySpark DataFrame\nSpark DataFrame in Scala\nR DataFrame\nSpark DataFrame in R\n\nThe data for the DataFrame is available in a variety of way:\n\nThe `value` property has an Object representation of the DataFrame.\nThe `rows` property has only the data portion of the DataFrame and can be structured as a 2D Array or\nan Array of Objects.\nThe `columns` property has an Array of column names\n\nThe amount of data rows that is made available to this element from the kernel instance is controled by\nthe `limit` property.\n\nExample:\n\n    <urth-core-dataframe id=\"f1\" ref=\"aDataFrame\" value=\"{{df}}\" auto></urth-core-dataframe>\n\n    <urth-core-dataframe id=\"f1\" ref=\"aDataFrame\" rows=\"{{rows}}\" columns=\"{{cols}}\" auto></urth-core-dataframe>\n\n    <urth-core-dataframe id=\"f1\" ref=\"aDataFrame\" rows=\"{{rows}}\" rows-as-object auto></urth-core-dataframe>\n\nThis element also support querying the DataFrame using the `urth-core-query-*` elements as children.\n\nExample:\n    <urth-core-dataframe id=\"f1\" ref=\"aDataFrame\" value=\"{{df}}\">\n        <urth-core-query-filter>aCol > {{someVal}}</urth-core-query-filter>\n        <urth-core-query-group by=\"anotherCol\">\n            <urth-core-query-agg op=\"avg\" col=\"someOtherCol\"></urth-core-query-agg>\n        </urth-core-query-group>\n    </urth-core-dataframe>\n\n","events":[],"properties":[{"name":"auto","type":"Boolean","desc":"\nToggles automatic updates upon the completion of code execution.\n             ","published":true,"default":false},{"name":"busy","type":"Boolean","desc":"\nIf true, it means that the element is waiting on the kernel to return the data\n             ","published":true,"default":false,"notify":true,"readOnly":true},{"name":"columns","type":"Array","desc":"\nAn Array with the column names for the DataFrame\n             ","published":true,"notify":true},{"name":"debug","type":"Boolean","desc":"\nIf true, this element will render a simple table help inspect the data\n             ","published":true,"default":false},{"name":"limit","type":"Number","desc":"\nSets the maximun number of rows to bring to the client.\n             ","published":true,"default":100,"reflectToAttribute":"UNKNOWN","observer":"_onLimitChange"},{"name":"onModel__status__Change","type":"Function","desc":" \nto override onModel__status__Change in jupyter-widget-behavior.html\nWe need to clear error message on status ok\n         ","params":[{"name":"newStatus"}],"function":true},{"name":"onModelReady","type":"Function","desc":"\nonModelReady is invoked when have created the model portion of the widget\n         ","params":[],"function":true},{"name":"onModelValueChange","type":"Function","desc":"\nonModelValueChange is invoked by JupyterWidgetBehavior when the `value` `property in\nthe Backbone model changes.\n         ","params":[{"name":"newVal"}],"function":true},{"name":"query","type":"Array","desc":"\nAn Array with a JSON structures that define queries to perform on the DataFrame.\n             ","published":true,"readOnly":true,"observer":"_onQueryChange"},{"name":"queryChildren","type":"Array","desc":"\nArray with the child elements used to define the query.\n             ","published":true,"readOnly":true},{"name":"queryDelay","type":"Number","desc":"\nTime to debounce synchronizing changes to the query with the kernel component.\n             ","published":true,"default":750},{"name":"ref","type":"String","desc":"\nThe name of the DataFrame variable that this element\nwill bind to.\n             ","published":true,"default":""},{"name":"refresh","type":"Function","desc":"\nUpdate the DataFrame `value` held by this element with\nthe DataFrame's current state on the kernel.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"refresh","description":null}]},"function":true},{"name":"refreshTimeout","type":"Number","desc":"\nAmount of time to wait (milliseconds) for a refresh/sync call to complete. This allows for throttling messages to get the\ndata from the DataFrame. In cases like Spark, getting the data may take a long time and this setting allows\nthrottling request to avoid overloading the DataFrame host.\n             ","published":true,"default":10000},{"name":"rowAsObject","type":"Boolean","desc":"\nControls the shape of the `rows` property. If true, `rows` is an Array of Objects, else `rows` is a 2D\nArray.\n             ","published":true,"default":false},{"name":"rows","type":"Array","desc":"\nAn Array containing the data rows of the DataFrame. If 'row-as-object` is false, this\nproperty will contain a 2D Array where the outer Array contains each row and the inner Array contains\nthe values for each column in the order defined by the `columns` property. If 'row-as-object` is true,\nthis property will contain an Array of Objects, where each Object represents a row of data with column\nvalues keyed by column names.\n             ","published":true,"notify":true},{"name":"value","type":"Object","desc":"\nThe serialized representation of the DataFrame `ref`. The structure contains:\n{\n columns: Array of column names\n data: 2D Array of rows with column values\n index: Array with index values\n}\n             ","published":true,"readOnly":true,"notify":true},{"name":"_columns","type":"Function","desc":"\nReturns the columns portion of the serialized DataFrame\n","params":[{"name":"df","desc":"the serialized DataFrame"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":null,"desc":"the columns array"}},{"name":"_handleChildChanged","type":"Function","params":[],"private":true,"function":true},{"name":"_handleQueryChildrenChanged","type":"Function","params":[],"private":true,"function":true},{"name":"_head","type":"Function","desc":"\nReturns at most 10 elements from the array\n\n","params":[{"name":"rows","desc":"All the data"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"Array","desc":null}},{"name":"_onExecutionComplete","type":"Function","params":[],"private":true,"function":true},{"name":"_onLimitChange","type":"Function","params":[],"private":true,"function":true},{"name":"_onQueryChange","type":"Function","params":[],"private":true,"function":true},{"name":"_query","type":"Function","desc":"\nReturns the structure query based on the child query elements\n","params":[{"name":"queryChildren","desc":"Array of child nodes"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":null,"desc":"the query structure"}},{"name":"_rows","type":"Function","desc":"\nReturns the data portion of the serialized DataFrame as a 2D array or as an Array of Objects depending on the\nvalue of `rowAsObject`.\n","params":[{"name":"df","desc":"the serialized DataFrame"},{"name":"rowAsObject","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","desc":"\nRemove mutation observer\n         ","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.JupyterWidgetBehavior","Urth.ExecutionCompleteBehavior"],"observers":[{"javascriptNode":{"type":"Literal","start":4355,"end":4391,"loc":{"start":{"line":144,"column":12},"end":{"line":144,"column":48}},"range":[4355,4391],"value":"_handleChildChanged(queryChildren)","raw":"'_handleChildChanged(queryChildren)'"},"expression":"_handleChildChanged(queryChildren)"}],"is":"urth-core-dataframe","contentHref":"bower_components/urth-core-dataframe/urth-core-dataframe.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-dataframe"}]},"demos":[]},{"type":"element","desc":"\nAn element that provides [monostate](http://c2.com/cgi/wiki?MonostatePattern)\ndata channels. All instances of `urth-core-channel` have access to the shared\ndata. Use the `register` API to register elements as listeners of the data\nchannel. When a property value change occurs, all listeners of the data channel\nare notified by having the associated property set on the element.\n\nExamples:\n\n```html\n<urth-core-channel id='dataChannel'></urth-core-channel>\n```\n\nProperty values can be set and retrieved using the `set` and `get`\nAPI:\n\n```javascript\ndocument.getElementById('dataChannel').set('user', 'Luke');\n```\n\nIf the instance is included in a Polymer element, values can be set\nand retrieved as follows:\n\n```html\n<urth-core-channel id='dataChannel'></urth-core-channel>\n...\nthis.$.dataChannel.set('user', 'Luke');\nthis.$.dataChannel.get('user') // Returns 'Luke'\n```\n\nRegister an element with the data channel to receive property updates:\n\n```html\n<urth-core-channel id='dataChannel'></urth-core-channel>\n<template is='dom-bind' id='mytemplate'>\n    <div><span>{{user}}</span>, may the force be with you</div>\n</template>\n...\nvar dataChannel = document.getElementById('dataChannel');\nvar mytemplate = document.getElementById('mytemplate');\ndataChannel.register(mytemplate);\ndataChannel.set('user', 'Luke');\n```\n\n","events":[],"properties":[{"name":"clear","type":"Function","desc":"\nClears all the data in the channel.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"clear","description":null}]},"function":true},{"name":"debug","type":"Boolean","desc":"\nA boolean that when set to true renders the content of the channel\nin the DOM.\n                 ","published":true,"default":false},{"name":"get","type":"Function","desc":"\nRetrieves the value of the specified key on the channel or\nundefined if the key has not been set.\n\n","params":[{"name":"key","type":"String","desc":"The key of the value to return."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"get","description":null}]},"function":true,"return":{"type":"Object","desc":"The value stored for the key or undefined."}},{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"name","type":"String","desc":"\nThe name of the channel to use.\n                 ","published":true,"observer":"_onNameChange","notify":true,"reflectToAttribute":"UNKNOWN","default":"default"},{"name":"register","type":"Function","desc":"\nRegisters an element as a listener for data channel changes.\nThe element will have its property set when a key is set\non the channel.\n\n","params":[{"name":"element","type":"HTMLElement","desc":"The DOM element to register."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"register","description":null}]},"function":true},{"name":"registeredElements","type":"Array","desc":"\nAn array of DOM elements registered with the channel.\n                 ","published":true,"notify":true,"readOnly":true,"default":"[]"},{"name":"reload","type":"Function","desc":"\nReloads the data on the channel from saved values in storage.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"save","description":null}]},"function":true},{"name":"save","type":"Function","desc":"\nSaves the data on the channel to storage.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"save","description":null}]},"function":true},{"name":"set","type":"Function","desc":"\nSets the value of a key on the channel.\n\n","params":[{"name":"key","type":"String","desc":"The key to be associated with the value."},{"name":"value","type":"Object","desc":"The value to set."},{"name":"options","type":"Object","desc":"Additional options. Currently\nonly `oldValue` is supported. If not specified, the current value\nwill be retrieved with the `get` method."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"set","description":null}]},"function":true},{"name":"unregister","type":"Function","desc":"\nRemoves the specified element as a listener on the channel.\nIf no element is specified then all registrations for the channel\nare removed.\n\n","params":[{"name":"element","type":"HTMLElement","desc":"The DOM element to register."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"unregister","description":null}]},"function":true},{"name":"unwatch","type":"Function","desc":"\nRemoves a watch function from the specified property key.\nIf no key is specified then all watchers for the channel\nare removed. If a key is specified but no handler is specified\nthen all watchers for the key are removed.\n\n","params":[{"name":"key","type":"String","desc":"The property to unwatch."},{"name":"handler","type":"Function","desc":"The previously registered watch function."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"unregister","description":null}]},"function":true},{"name":"watch","type":"Function","desc":"\nRegisters a function that will be invoked when the specified\nproperty is modified.\n\n","params":[{"name":"key","type":"String","desc":"The property to watch."},{"name":"handler","type":"Function","desc":"(key, oldValue, value) Function to\ninvoke when property is modified."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"watch","description":null}]},"function":true},{"name":"watchers","type":"Object","desc":"\nAn object containing the properties being watched and\nthe associated handlers. Keys of the object are the\nproperties being watched. Value of the keys is an\narray of functions.\n                 ","published":true,"notify":true,"readOnly":true,"default":"{}"},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"name":"_onChannelItemChange","type":"Function","params":[{"name":"item"}],"private":true,"function":true},{"name":"_onNameChange","type":"Function","params":[{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"name":"_updateData","type":"Function","params":[{"name":"item"}],"private":true,"function":true},{"name":"_updateRegistered","type":"Function","params":[{"name":"key"},{"name":"newVal"},{"name":"oldVal"},{"name":"updateWatchers"},{"name":"root"}],"private":true,"function":true},{"name":"_updateViewer","type":"Function","params":[],"private":true,"function":true},{"name":"_updateWatchers","type":"Function","params":[{"name":"key"},{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.LoggingBehavior"],"observers":[],"is":"urth-core-channel","contentHref":"bower_components/urth-core-channel/urth-core-channel.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-channel"}]},"demos":[]},{"type":"element","desc":"\n`urth-core-channel-broker` is a singleton element that is used to\ncoordinate communication between `urth-core-channel` elements and\nthe model. _This element is not intended for use as a standalone element._\n\nExample: _Retrieve the singleton instance._\n\n```javascript\nvar broker = window.Urth['urth-core-channel-broker'].getChannelBroker();\n```\n\n","events":[{"desc":"\nFired on any registered `urth-core-channel` elements when a\nproperty is modified on the channel.\n\n","jsdoc":{"description":"\nFired on any registered `urth-core-channel` elements when a\nproperty is modified on the channel.\n\n","tags":[{"tag":"event","type":null,"description":"urth-channel-data-update"}],"orig":"*\n             * Fired on any registered `urth-core-channel` elements when a\n             * property is modified on the channel.\n             *\n             * @event urth-channel-data-update\n             "},"name":"urth-channel-data-update","params":[]}],"properties":[{"name":"addChannelElement","type":"Function","desc":"\nRegisters an `urth-core-channel` element with the\nspecified channel.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel."},{"name":"element","type":"HTMLElement","desc":"An `urth-core-channel` DOM element."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"addChannelElement","description":null}]},"function":true,"return":{"type":"Object","desc":"The data currently set on the specified channel."}},{"name":"clear","type":"Function","desc":"\nClears all the data in the specified channel.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"clear","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"createModel","type":"Function","desc":"\nCreates a backbone model and a comm connection with an instance\nof the specified kernelClass on the kernel.\n\nUpon completion, invokes `onModelReady` with the created model.\n\n","params":[{"name":"kernelClass","type":"String","desc":"A class name to instantiate kernel side."},{"name":"retryCount","type":"Number","desc":"The number of times to retry the model creation if a failure occurs."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"createModel","description":null}]},"function":true},{"name":"get","type":"Function","desc":"\nRetrieves the value of the specified key on the specified\nchannel or undefined if the key has not been set.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel to use."},{"name":"key","type":"String","desc":"The key of the value to return."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"get","description":null}]},"function":true,"return":{"type":"Object","desc":"The value stored for the key or undefined."}},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"getModelStatusMsg","type":"Function","desc":"\nreturns the model's __status__ object,\nso elements who has this behavior can check for error if __status__.status is \"error\"\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"getModelStatusMsg","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"isConnected","type":"Function","desc":"\nReturns the state of the connection to the kernel side proxy.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"isConnected","description":null}]},"function":true,"return":{"type":"Boolean","desc":"Returns `true` if the element is able to communicate with the\n                 kernel side proxy."}},{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"onKernelReady","type":"Function","desc":"\nWhen a kernel is available and ready, this handler sends the request\nto create a new kernel side channels proxy and establishes the comm.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"onKernelReady","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"onModel__status__Change","type":"Function","desc":"\nClears or displays error messages according to the status\nsent from the kernel. The status is \"ok\" when execution was\nsuccessful, and \"error\" when an error occurred.\n             ","params":[{"name":"newVal"}],"function":true},{"name":"onModelChange","type":"Function","desc":"\nCalls to this method occur when users make changes to channel data using\nthe kernel language.\n\n","params":[{"name":"options","type":"Object","desc":null}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"onModelChange","description":null}]},"function":true},{"name":"onModelReady","type":"Function","params":[],"function":true},{"name":"onSave","type":"Function","desc":"\nSaves the data in all of the currently defined channels.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"onSave","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"parentCell","type":"Function","desc":"\nReturns the parent Code cell that may contain this element.\n\nNote: Not all element will be under a code cell, so this might return null.\n\n","params":[],"function":true},{"name":"reload","type":"Function","desc":"\nReloads the data on the channel from saved values in storage\nfor the specified channel name.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel to reload."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"save","description":null}]},"function":true},{"name":"removeChannelElement","type":"Function","desc":"\nUnregisters an `urth-core-channel` element with the specified\nchannel.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel."},{"name":"element","type":"HTMLElement","desc":"An `urth-core-channel` DOM element."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"removeChannelElement","description":null}]},"function":true,"return":{"type":"Object","desc":"The data associated with the specified channel."}},{"name":"save","type":"Function","desc":"\nSaves the data on the channel to storage.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel to save."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"save","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"send","type":"Function","desc":"\nSends a message to the kernel side proxy of this element. A promise is returned to notify when the message\nhad been processed by the kernel (i.e. status back to idle). It is not intended to get data, rather meant\nto allow clients to throttle messages.\n\n","params":[{"name":"msg","type":"Object","desc":"A json message."},{"name":"timeout","type":"Number","desc":"The time in (milliseconds) to wait for a response before rejecting the promise. If not set, the promise may never be rejected."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"send","description":null}]},"function":true,"return":{"type":"Promise","desc":null}},{"name":"set","type":"Function","desc":"\nSets the value of a key on the channel. Setting a value\nwill set the property value on all registered elements. Creates\nthe channel if it does not exist. Fires an `urth-channel-data-update`\nevent on any `urth-core-channel-elements` registered with the\nspecified channel.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel."},{"name":"key","type":"String","desc":"The key to be associated with the value."},{"name":"value","type":"Object","desc":"The value to set."},{"name":"options","type":"Object","desc":"Additional options. Currently\nonly `oldValue` is supported. If not specified, the current value\nwill be retrieved with the `get` method."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"set","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"sync","type":"Function","desc":"\nSynchronizes the state provided with the kernel side proxy of this element.\n\n","params":[{"name":"values","type":"Object","desc":"An object containing the state to synchronize.\n                The keys match properties on the kernel side proxy."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"sync","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_callbacks","type":"Function","params":[],"private":true,"function":true},{"name":"_createGlobalChannel","type":"Function","params":[{"name":"channelName"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_doCreateModel","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_getGlobalChannel","type":"Function","params":[{"name":"channelName"}],"private":true,"function":true},{"name":"_getOrCreateGlobalChannel","type":"Function","params":[{"name":"channelName"}],"private":true,"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_handleCommDisconnect","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_isCommDisposed","type":"Function","desc":"\nDetermine if the comm object is disposed (closed). This function works with both\nlegacy and jupyter-js-services' comm objects.\n","params":[{"name":"comm","type":"(IComm|Comm)","desc":null}],"private":true,"function":true,"return":{"type":"boolean","desc":null}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_onModelChange","type":"Function","params":[{"name":"options"}],"private":true,"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_retryCreateModel","type":"Function","params":[],"private":true,"function":true},{"name":"_sendItem","type":"Function","desc":"\nSends the specified update to the model.\n\n","params":[{"name":"key","type":"String","desc":"The key that is being modified."},{"name":"newVal","type":"Object","desc":"The new value to set for the key."},{"name":"oldVal","type":"Object","desc":"The old value for the key."},{"name":"channelName","type":"String","desc":"The string name of the channel to update."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"sendItem","description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_unRegisterModelCallbacks","type":"Function","desc":"\nUnregister event callbacks associated with the model.\n             ","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_unRegisterNotebookCallbacks","type":"Function","desc":"\nUnregister event callbacks associated with the notebook.\n             ","params":[],"private":true,"function":true},{"name":"_validPath","type":"Function","desc":"\nDecides whether the given string is valid for use.\n\n","params":[{"name":"path","type":"String","desc":"The path string to evalute."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"_validPath","description":null}]},"private":true,"function":true,"return":{"type":"Boolean","desc":"true if the path is valid."}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.JupyterSaveBehavior","name":"created","type":"Function","params":[{"name":"event"},{"name":"callback"}],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.JupyterSaveBehavior","name":"detached","type":"Function","params":[{"name":"event"},{"name":"callback"}],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.JupyterWidgetBehavior","Urth.JupyterKernelObserver","Urth.JupyterSaveBehavior"],"observers":[],"is":"urth-core-channel-broker","contentHref":"bower_components/urth-core-channel/urth-core-channel-broker.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-channel-broker"}]},"demos":[]},{"type":"element","desc":"\nA simple element that provides a `key` and `value` attribute. This\nelement is typically used with `urth-core-channel`.\n\nExample: Initialize channel data.\n\n```html\n<urth-core-channel>\n    <urth-core-channel-item key='foo' value='bar'></urth-core-channel-item>\n    <urth-core-channel-item key='bar' value='none'></urth-core-channel-item>\n</urth-core-channel>\n```\n\n","events":[{"desc":"\nFired when key or value changes.\n\n","jsdoc":{"description":"\nFired when key or value changes.\n\n","tags":[{"tag":"event","type":null,"description":"urth-core-channel-item-change"},{"tag":"param","type":"{key: string, value: object}","name":"detail","description":"    key: The property name.\n    value: The property value."}],"orig":"*\n             * Fired when key or value changes.\n             *\n             * @event urth-core-channel-item-change\n             * @param {{key:string, value:object}} detail -\n             *     key: The property name.\n             *     value: The property value.\n             "},"name":"urth-core-channel-item-change","params":[{"type":"{key: string, value: object}","desc":"    key: The property name.\n    value: The property value.","name":"detail"}]}],"properties":[{"name":"key","type":"String","desc":"The key for the data property. ","published":true},{"name":"value","type":"Object","desc":"The value of the data property. ","published":true},{"name":"_notifyItemChange","type":"Function","params":[],"private":true,"function":true}],"behaviors":[],"observers":[{"javascriptNode":{"type":"Literal","start":521,"end":552,"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":47}},"range":[521,552],"value":"_notifyItemChange(key, value)","raw":"'_notifyItemChange(key, value)'"},"expression":"_notifyItemChange(key, value)"}],"is":"urth-core-channel-item","contentHref":"bower_components/urth-core-channel/urth-core-channel-item.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Framework"},{"tag":"element","type":null,"description":"urth-core-channel-item"}]},"demos":[]},{"type":"element","desc":"\nThis element is used to define a filter clause. It uses the text content as the area\nfor the filter expression to allow the flexibility of complex filter. The content of\nthe filter expression depends on the type of DataFrame. Please refer to the following\nfor details:\n\n- Pandas DataFrame: http://pandas.pydata.org/pandas-docs/version/0.18.1/generated/pandas.DataFrame.query.html\n- PySpark DataFrame: https://spark.apache.org/docs/1.5.2/api/python/pyspark.sql.html#pyspark.sql.DataFrame.filter\n- Scala Spark DataFrame: https://spark.apache.org/docs/1.6.1/api/java/org/apache/spark/sql/DataFrame.html#filter(java.lang.String)\n- R DataFrame: https://stat.ethz.ch/R-manual/R-devel/library/base/html/data.frame.html\n- SparkR DataFrame: https://spark.apache.org/docs/latest/api/R/filter.html\n\nExample:\n\n```\n<urth-core-dataframe ref=\"someDf\">\n    <urth-core-query-filter>someCol = value and anotherCor = {{bindingVar}}</urth-core-query-filter>\n<urth-core-dataframe>\n```\n\n\n","events":[],"properties":[{"name":"disabled","type":"Boolean","desc":"\nIf false, this element will return an undefined query. It basically\nallows disabling the filter on a condition.\n                 ","published":true,"default":false},{"name":"expression","type":"String","desc":"\nThe cleaned up expression from text content\n                 ","published":true,"notify":true},{"name":"query","type":"Object","desc":"\nThe structure query\n                 ","published":true,"notify":true},{"name":"_buildQuery","type":"Function","desc":"\nBuilds the query structure that is sent to the kernel\n","params":[{"name":"expression"},{"name":"disabled"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_contentChanged","type":"Function","desc":"\nConstruct a cleaned up expression based on text content\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"attached","type":"Function","desc":"\nAdds a mutation observer to see changes in the text content\n             ","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","desc":"\nRemove mutation observer\n             ","params":[],"private":true,"configuration":true,"function":true}],"behaviors":[],"observers":[],"is":"urth-core-query-filter","contentHref":"bower_components/urth-core-dataframe/urth-core-query-filter.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-query-filter"}]},"demos":[]},{"type":"element","desc":"\nThis element is used to define an aggregate function to perform on grouped data. It is intended\nas a child element of `<urth-core-query-group`>. The `op` property defines a supported aggregate\nfunction for the type of DataFrame. The `col` property is a valid column name for which to perform\nthe aggregation. Please refer to the following for details:\n\n- Pandas DataFrame: http://pandas.pydata.org/pandas-docs/version/0.16.0/groupby.html#applying-different-functions-to-dataframe-columns\n- PySpark DataFrame: http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.GroupedData.agg\n- Scala Spark DataFrame: https://spark.apache.org/docs/1.4.0/api/java/org/apache/spark/sql/GroupedData.html#agg(org.apache.spark.sql.Column,%20scala.collection.Seq)\n- R DataFrame: https://stat.ethz.ch/R-manual/R-devel/library/stats/html/aggregate.html\n- SparkR DataFrame: https://spark.apache.org/docs/latest/api/R/groupBy.html\n\nExample:\n\n```\n<urth-core-dataframe ref=\"someDf\">\n    <urth-core-query-group by=\"{{aCol}}\">\n        <urth-core-query-agg op=\"sum\" col=\"someCol\"></urth-core-query-agg>\n    </urth-core-query-group>\n<urth-core-dataframe>\n```\n\n","events":[],"properties":[{"name":"col","type":"String","desc":"\nName of column\n                 ","published":true},{"name":"isValid","type":"Function","desc":"\nTrue if both op and col are set\n             ","params":[{"name":"op"},{"name":"col"}],"function":true},{"name":"op","type":"String","desc":"\nName of aggregate operation\n                 ","published":true},{"name":"valid","type":"Boolean","desc":"\nTrue if both op and col are set\n                 ","published":true,"notify":true},{"name":"_contentChanged","type":"Function","params":[],"private":true,"function":true}],"behaviors":[],"observers":[{"javascriptNode":{"type":"Literal","start":827,"end":853,"loc":{"start":{"line":37,"column":16},"end":{"line":37,"column":42}},"range":[827,853],"value":"_contentChanged(op, col)","raw":"'_contentChanged(op, col)'"},"expression":"_contentChanged(op, col)"}],"is":"urth-core-query-agg","contentHref":"bower_components/urth-core-dataframe/urth-core-query-agg.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-query-agg"}]},"demos":[]},{"type":"element","desc":"\nThis element is used to define a group clause. The `by` property is a comma separated string of column names.\nThe aggregate calculations are done by placing `urth-core-query-agg` elements as children.\n\nExample:\n\n```\n<urth-core-dataframe ref=\"someDf\">\n    <urth-core-query-group by=\"{{aCol}}\">\n        <urth-core-query-agg op=\"sum\" col=\"someCol\"></urth-core-query-agg>\n    </urth-core-query-group>\n<urth-core-dataframe>\n```\n\n","events":[],"properties":[{"name":"aggregates","type":"Array","desc":"\nAn array containing the aggregate clause structure\n                 ","published":true},{"name":"by","type":"String","desc":"\nComma separated string of column names\n                 ","published":true},{"name":"isValid","type":"Function","desc":"\nTrue if the value of `by` is correctly set to one or more columns and there is at least on\naggregate clause.\n             ","params":[{"name":"__by"},{"name":"aggregates"}],"function":true},{"name":"query","type":"Object","desc":"\nThe structure query\n                 ","published":true,"notify":true},{"name":"valid","type":"Boolean","desc":"\nTrue if the values of `by` is set to at least one column and there is at least on aggregate clause\n                 ","published":true,"notify":true},{"name":"__by","type":"Object","published":true,"private":true},{"name":"_buildQuery","type":"Function","desc":"\nBuilds the query structure that is sent to the kernel\n","params":[{"name":"__by"},{"name":"aggregates"},{"name":"valid"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_contentChanged","type":"Function","desc":"\nBuilds an array with aggregate structures of the form\n\n{\n   op: \"an operation\"\n   col: \"a column name\"\n}\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.QueryBehavior","name":"_toStringOrArray","type":"Function","desc":"\nTakes a comma separated string and return a single String value is one element or an array of Strings\n","params":[{"name":"commaStr","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"attached","type":"Function","desc":"\nAdds a mutation observer to react to changes to count of `urth-core-query-agg` child\nelements.\n             ","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","desc":"\nRemove mutation observer\n             ","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true}],"behaviors":["Urth.QueryBehavior"],"observers":[],"is":"urth-core-query-group","contentHref":"bower_components/urth-core-dataframe/urth-core-query-group.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-query-group"}]},"demos":[]},{"type":"element","desc":"\nThis element is used to define a sort clause. The 2 main properties are:\n\nby - comma separated string of column names\ndirection - comma separated string of asc|desc for the sort direction\n\nExample:\n\n```\n<urth-core-dataframe ref=\"someDf\">\n    <urth-core-query-sort by=\"a,b,c\" direction=\"asc,asc,desc\"></urth-core-query-sort>\n<urth-core-dataframe>\n```\n\n","events":[],"properties":[{"name":"by","type":"String","desc":"\nComma separated string of column names\n                 ","published":true},{"name":"direction","type":"String","desc":"\nComma separated string of asc|desc\n                 ","published":true},{"name":"isValid","type":"Function","desc":"\nReturns true if the paramters of the query are valid\n             ","params":[{"name":"__by"},{"name":"__direction"}],"function":true},{"name":"query","type":"Object","desc":"\nThe structure query\n                 ","published":true,"notify":true},{"name":"valid","type":"Boolean","desc":"\nTrue if the values of `by` and `direction` are compatible in terms\nof length.\n                 ","published":true,"notify":true},{"name":"__by","type":"Object","published":true,"private":true},{"name":"__direction","type":"Object","published":true,"private":true},{"name":"_buildQuery","type":"Function","desc":"\nBuilds the query structure that is sent to the kernel\n","params":[{"name":"__by"},{"name":"__direction"},{"name":"valid"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.QueryBehavior","name":"_toStringOrArray","type":"Function","desc":"\nTakes a comma separated string and return a single String value is one element or an array of Strings\n","params":[{"name":"commaStr","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true}],"behaviors":["Urth.QueryBehavior"],"observers":[],"is":"urth-core-query-sort","contentHref":"bower_components/urth-core-dataframe/urth-core-query-sort.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-query-sort"}]},"demos":[]},{"type":"element","desc":"\nCreates a client side proxy to a function defined in the kernel. This function is specified by\nname using the `ref` attribute.\n\nThe elements allows setting parameters in 2 ways:\n\n1. Using properties named in the patters `arg-<parameter name>`\n    <urth-core-function ref=\"aFunction\" arg-x='5' arg-y='4'></urth-core-function>\n\n2. Using the `args` property. The `args` property is a JSON Object where the keys are the parameter names\n    <urth-core-function ref=\"aFunction\" args='{\"x\":5, \"y\":4}'></urth-core-function>\n\nBoth examples are equivalent to invoking `aFunction(x=5, y=4)`\n\n`urth-core-function` will invoke in the following ways:\n\n 1. By calling the `invoke` method using Javascript\n 2. By setting the `auto` property and it automatically invokes when parameters set\n 3. By handling the `click` event of a child element. For example, just placing a `button` inside this element.\n\n\nNote that when using the 'click' event approach described above in #3, a click on any child will trigger an invocation.\n\n","events":[],"properties":[{"name":"args","type":"Object","desc":"\nObject reflecting the current values of the parameters to the\nfunction. This property can be used for binding.\n                 ","published":true,"notify":true},{"name":"auto","type":"Boolean","desc":"\nControls if the function is invoked automatically on any\nchange to its parameters, and whether the `signature` is\nrefreshed after each code execution.\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"name":"delay","type":"Number","desc":"\nSets a delay time, in milliseconds, for debouncing the\ninvocation of the function. This time will debounce for\nevery argument change as well as every call to invoke.\n                 ","published":true},{"name":"invoke","type":"Function","desc":"\nForces an invocation of the function\n\n","params":[{"name":"skipValidate","type":"boolean","desc":"Optional flag to skip validation of params before sending message to invoke"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"invoke","description":null}]},"function":true},{"name":"isReady","type":"Boolean","desc":"\nFlag to signal that the function is ready to be called.\nReady means that the signature of the function is known and\nany required arguments have values assigned.\n                 ","published":true,"readOnly":true,"notify":true},{"name":"isValid","type":"Function","desc":"\nFunction is valid if all necessary parameter for the function are set. Necessary parameters refers to\nparameters that are listed and do not have a default value.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"isValid","description":null}]},"function":true,"return":{"type":"boolean","desc":"true if all necessary parameters are set, else false"}},{"name":"limit","type":"Number","desc":"\nSets the maximun number of rows to bring to the client.\n                 ","published":true,"default":100,"reflectToAttribute":"UNKNOWN","observer":"_onLimitChange"},{"name":"onModelReady","type":"Function","desc":"\nonModelReady is invoked when have created the model portion of the widget\n             ","params":[],"function":true},{"name":"onModelResultChange","type":"Function","desc":"\nonModelResultChange is invoked by JupyterWidgetBehavior when the `result` property in\nthe Backbone model changes.\n             ","params":[{"name":"newVal"}],"function":true},{"name":"onModelSignatureChange","type":"Function","params":[{"name":"newVal"}],"function":true},{"name":"ref","type":"String","desc":"\nName of the function to proxy. Must be a function that is\ndefined in the kernel.\n                 ","published":true,"default":""},{"name":"refresh","type":"Function","desc":"\nUpdate the `signature` held by this element with\nthe function signature's current state on the kernel.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"refresh","description":null}]},"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"resetDynamicProperties","type":"Function","desc":"\nRemoves all dynamic properties added to this element.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"resetDynamicProperties","description":null}]},"function":true},{"name":"result","type":"Object","desc":"\nObject representing the function return value after invocation.\n                 ","published":true,"readOnly":true,"notify":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"setDynamicProperties","type":"Function","desc":"\nSets the specified properties to this instance of an element. The\ndynProps parameter is in the same format as the `properties` object used\nin defining new Polymer elements.\n\n","params":[{"name":"dynProps","desc":"Object with properties to set"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"setDynamicProperties","description":null}]},"function":true},{"name":"signature","type":"Object","desc":"\nDescribes the signature of the parameters to the function.\nThis object will contain objects keyed by the parameter name\nand information about type and requirement. It is used to\ndetermine if the current arguments are in a valid state to\ninvoke the function.\n                 ","published":true,"readOnly":true,"observer":"_onSignatureChange"},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__complexObserver","type":"Function","desc":"\nGeneric complex observer to handle changes within arrays and objects\n             ","params":[{"name":"rec"}],"private":true,"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__createAccessors","type":"Function","desc":"\nModified to add `configurable` to the descriptor object to allow for\ndeletion of dynamically added properties.\nsee http://stackoverflow.com/questions/7141210/how-do-i-undo-a-object-defineproperty-call\n             ","params":[{"name":"property"},{"name":"effects"}],"private":true,"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__createBindings","type":"Function","desc":"\nModified from Polymer.Bind.createBindings to allow only createBindings the\ngiven properties and to call our __createAccessors function.\n             ","params":[{"name":"dynProps"}],"private":true,"function":true},{"name":"_computeReady","type":"Function","desc":"\nCurrently using isValid as a way to compute isReady. isValid includes the check for available signature.\n             ","params":[{"name":"args"},{"name":"signature"}],"private":true,"function":true},{"name":"_createArgChangeHandler","type":"Function","params":[{"name":"param"}],"private":true,"function":true},{"name":"_isParameterAttribute","type":"Function","params":[{"name":"attr"}],"private":true,"function":true},{"name":"_isParameterUnset","type":"Function","desc":"\nReturns false if paramValue is undefined, null and NaN.\n\n","params":[{"name":"paramValue","type":"*","desc":"Any value sent to test"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"_isParameterUnset","description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"true if considered unset"}},{"name":"_onArgsPropertyChanged","type":"Function","params":[{"name":"rec"}],"private":true,"function":true},{"name":"_onExecutionComplete","type":"Function","params":[],"private":true,"function":true},{"name":"_onLimitChange","type":"Function","params":[{"name":"limit"}],"private":true,"function":true},{"name":"_onParameterChange","type":"Function","params":[{"name":"argName"},{"name":"argValue"}],"private":true,"function":true},{"name":"_onSignatureChange","type":"Function","desc":"\nThis method handles changes to the signature of the method. It will create a new property based on\nthe name of the parameter. These new properties will allow data binding and will be kept in sync with\nthe contents of the `args` property.\n\n             ","params":[{"name":"sig"}],"private":true,"function":true},{"name":"_paramsFromAttributes","type":"Function","params":[],"private":true,"function":true},{"name":"_serializeParamsForSend","type":"Function","desc":"\nBuilds the `args` section of the 'invoke' message by serializing each\nparam as necessary.\n             ","params":[],"private":true,"function":true},{"name":"_syncParamAttributes","type":"Function","params":[{"name":"params"}],"private":true,"function":true},{"name":"_toParamName","type":"Function","params":[{"name":"attr"}],"private":true,"function":true},{"name":"_toParamPropertyName","type":"Function","params":[{"name":"paramName"}],"private":true,"function":true},{"name":"_toParamPropertyObserverName","type":"Function","params":[{"name":"paramName"}],"private":true,"function":true},{"name":"_tryInvoke","type":"Function","params":[],"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.JupyterWidgetBehavior","Urth.ExecutionCompleteBehavior","Urth.DynamicPropertiesBehavior"],"observers":[{"javascriptNode":{"type":"Literal","start":3436,"end":3468,"loc":{"start":{"line":104,"column":16},"end":{"line":104,"column":48}},"range":[3436,3468],"value":"_onArgsPropertyChanged(args.*)","raw":"'_onArgsPropertyChanged(args.*)'"},"expression":"_onArgsPropertyChanged(args.*)"}],"is":"urth-core-function","contentHref":"bower_components/urth-core-function/urth-core-function.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-function"}]},"demos":[]},{"type":"element","desc":"\nAdds functionality to `<link>` to provide a mechanism to\ninstall web components registered as [bower](http://bower.io/) packages. This\nelement works with a server side REST endpoint to install the specified package\nand then upon successfull install, injects the appropriate HTML import into the page.\n\nThe `href` attribute should be specified as a relative path as the appropriate\nbase URL for the environment will be prefixed automatically. In the notebook\nall `href` values should be of the form `urth_components/<package_name>/<file>`.\n\nExample: _Install and import the paper-slider element_\n\n```html\n<link rel='import' href='urth_components/paper-slider/paper-slider.html'\n       is='urth-core-import' package='PolymerElements/paper-slider'>\n```\n\n","events":[{"desc":"\nfired when the specified package or href finishes loading. Listen\nto `load` and `error` and `importerror` events to determine success\nor failure of loading.\n\n","jsdoc":{"description":"\nfired when the specified package or href finishes loading. Listen\nto `load` and `error` and `importerror` events to determine success\nor failure of loading.\n\n","tags":[{"tag":"event","type":null,"description":"`finished`"}],"orig":"*\n         * fired when the specified package or href finishes loading. Listen\n         * to `load` and `error` and `importerror` events to determine success\n         * or failure of loading.\n         *\n         * @event `finished`\n         "},"name":"`finished`","params":[]},{"desc":"\nfired if the specified package or href fails to load.\n\n","jsdoc":{"description":"\nfired if the specified package or href fails to load.\n\n","tags":[{"tag":"event","type":null,"description":"`importerror`"}],"orig":"*\n         * fired if the specified package or href fails to load.\n         *\n         * @event `importerror`\n         "},"name":"`importerror`","params":[]},{"desc":"\nfired if the specified package or href loads successfully.\n\n","jsdoc":{"description":"\nfired if the specified package or href loads successfully.\n\n","tags":[{"tag":"event","type":null,"description":"`load`"}],"orig":"*\n         * fired if the specified package or href loads successfully.\n         *\n         * @event `load`\n         "},"name":"`load`","params":[]},{"desc":"\nfired when the specified package or href begins loading.\n\n","jsdoc":{"description":"\nfired when the specified package or href begins loading.\n\n","tags":[{"tag":"event","type":null,"description":"`loading`"}],"orig":"*\n         * fired when the specified package or href begins loading.\n         *\n         * @event `loading`\n         "},"name":"`loading`","params":[]}],"properties":[{"name":"debug","type":"Boolean","desc":"\nIf `true`, console output will be written to indicate the\nprogress of importing the specified `package`.\n            ","published":true,"default":false},{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"package","type":"String","desc":"\nThe project dependency to load. Any endpoints that are\nvalid for the [`bower install`](http://bower.io/docs/api/#install)\ncommand may be specified.\n             ","published":true,"observer":"_packageChanged","reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.JupyterNotebookEnv","name":"_baseURL","type":"Object","published":true,"default":"UNKNOWN","private":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_downloadPackage","type":"Function","params":[{"name":"successCB"},{"name":"errorCB"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_getImportEndpointURL","type":"Function","params":[{"name":"baseURL"}],"private":true,"function":true},{"__fromBehavior":"Urth.JupyterNotebookEnv","name":"_importBaseURL","type":"Object","published":true,"default":"url","private":true},{"name":"_importEndpointURL","type":"Object","desc":"\nThis is the URL to the import endpoint on the notebook.\n             ","published":true,"private":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"name":"_onHrefAttrChange","type":"Function","params":[{"name":"newHref"}],"private":true,"function":true},{"name":"_onLinkLoad","type":"Function","params":[],"private":true,"function":true},{"name":"_onLoadError","type":"Function","params":[{"name":"msg"}],"private":true,"function":true},{"name":"_onLoadSuccess","type":"Function","params":[],"private":true,"function":true},{"name":"_packageChanged","type":"Function","params":[{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"name":"_prefixHref","type":"Function","desc":" the notebook initialization and cell imports.","params":[{"name":"newHref"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"attributeChanged","type":"Function","params":[{"name":"name"},{"name":"type"}],"private":true,"configuration":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"extends","type":"string","private":true,"configuration":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.JupyterNotebookEnv","Urth.LoggingBehavior"],"observers":[],"is":"urth-core-import","contentHref":"bower_components/urth-core-import/urth-core-import.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-import"}]},"demos":[]},{"type":"element","desc":"\n`urth-core-import-broker` is a singleton element that is used to\nkeep track of pending imports and package downloads for `urth-core-import`\nelements. _This element is not intended for use as a standalone element._\n\nExample: _Retrieve the singleton instance._\n\n```javascript\nvar broker = window.Urth['urth-core-import-broker'].getImportBroker();\n```\n\n","events":[],"properties":[{"name":"addImport","type":"Function","desc":"\nTracks the completion of an `urth-core-import` element.\n\n","params":[{"name":"importElement","type":"HTMLElement","desc":"The `urth-core-import` element\nassociated with the specified `href`."},{"name":"href","type":"String","desc":"The requested resource url."},{"name":"packageName","type":"String","desc":"The requested resources installable\npackage name."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"addImport","description":null}]},"function":true,"return":{"type":"{completed: Promise, href: String, packageRef: String, result: Promise}","desc":null}},{"name":"getPendingImports","type":"Function","desc":"\nReturns an array of imports that are pending completion.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"getPendingImports","description":null}]},"function":true,"return":{"type":"Array","desc":"The pending imports. Each item in the array is\nan object with the following properties:\n`{completed: Promise, href: String, packageRef: String, result: Promise}`"}}],"behaviors":[],"observers":[],"is":"urth-core-import-broker","contentHref":"bower_components/urth-core-import/urth-core-import-broker.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-import-broker"}]},"demos":[]},{"type":"element","desc":"\n Provides an API to persist key value pairs.\n\n Examples:\n\n ```html\n <urth-core-storage collection='teams' id='teamStorage'></urth-core-storage>\n ```\n\n Values can be persisted and retrieved with the `set` and `get` API:\n\n ```javascript\n var ts = document.getElementById('teamStorage');\n ts.set('albuquerque', 'isotopes');\n ts.get('albuquerque');\n ```\n\n","events":[],"properties":[{"name":"clear","type":"Function","desc":"\nRemoves all of the keys for the configured collection from\nstorage.\n             ","params":[],"function":true},{"name":"collection","type":"String","desc":"\nThe name of the collection to store and retrieve values from\nstorage.\n                 ","published":true,"default":"__default__"},{"name":"enabled","type":"Boolean","desc":"\nWhether storage persistance is enabled.\n`true` if storage is enabled.\n                 ","published":true,"readOnly":true,"default":"ENABLED"},{"name":"get","type":"Function","desc":"\nReturns the value for the key in storage or null if it\nis not defined.\n\n","params":[{"name":"key","desc":"{String} key The name of the key in storage."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"get","description":null}]},"function":true,"return":{"type":"Object","desc":"The value stored for the key."}},{"name":"getKeys","type":"Function","desc":"\nReturns all of the keys in storage for the configured collection.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"getKeys","description":null}]},"function":true,"return":{"type":"Array","desc":"The array of keys for the collection."}},{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"remove","type":"Function","desc":"\nRemoves the specified key from storage.\n\n","params":[{"name":"key","type":"String","desc":"The name of the key in storage."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"remove","description":null}]},"function":true},{"name":"set","type":"Function","desc":"\nSets the value of the specified key in storage. If a value is not\nspecified, the key is removed from storage.\n\n","params":[{"name":"key","type":"String","desc":"The name of the key to set in storage."},{"name":"value","type":"Object","desc":"The value for the key."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"set","description":null}]},"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_getPrefixedKey","type":"Function","params":[{"name":"key"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true}],"behaviors":["Urth.LoggingBehavior"],"observers":[],"is":"urth-core-storage","contentHref":"bower_components/urth-core-storage/urth-core-storage.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-storage"}]},"demos":[]},{"type":"element","desc":"\nRepresents a widget that draws a area chart.\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","published":true,"default":"area","readOnly":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-area","contentHref":"bower_components/urth-viz-area/urth-viz-area.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-area"}]},"demos":[]},{"type":"element","desc":"\nCreates an element that listens to changes to the `value` property. When it changes, it fires 'watch_notify' custom\nevent on child elements.\n\nThe element provides a declarative way of handling changes to {{variables}}.\n\nExample: _One or more children. urth-core-function and urth-core-dataframe support the custom event._\n\n ```html\n <template>\n    <urth-core-watch value={{observed}}>\n        <urth-core-function ref=\"someFunction\" .../>\n    </urth-core-watch>\n </template>\n\n <template>\n    <urth-core-watch value={{observed}}>\n        <urth-core-dataframe ref=\"someDataframe\" .../>\n        <urth-core-function ref=\"someFunction\" .../>\n    </urth-core-watch>\n </template>\n ```\n\n","events":[],"properties":[{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"value","type":"Object","desc":"\nValue that is observed for changes.\n                 ","published":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"name":"_valueChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true}],"behaviors":["Urth.LoggingBehavior"],"observers":[{"javascriptNode":{"type":"Literal","start":388,"end":412,"loc":{"start":{"line":19,"column":16},"end":{"line":19,"column":40}},"range":[388,412],"value":"_valueChanged(value.*)","raw":"'_valueChanged(value.*)'"},"expression":"_valueChanged(value.*)"}],"is":"urth-core-watch","contentHref":"bower_components/urth-core-watch/urth-core-watch.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-watch"}]},"demos":[]},{"type":"element","desc":"\nRepresents a widget that draws a bar chart.\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","published":true,"default":"bar","readOnly":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-bar","contentHref":"bower_components/urth-viz-bar/urth-viz-bar.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-bar"}]},"demos":[]},{"type":"element","desc":"\nBase widget that draws a chart using NVD3, which supports several chart types.\n\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","desc":"\nThe type of chart (e.g. bar, pie).\n             ","published":true,"notify":true,"observer":"_typeChanged"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"name":"_typeChanged","type":"Function","params":[{"name":"newValue"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-chart","contentHref":"bower_components/urth-viz-chart/urth-viz-chart.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-chart"}]},"demos":[]},{"type":"element","desc":"\nRepresents a widget that lets the user choose between a set of visualizations for a given dataframe.\n\nExample:\n\n    <urth-viz-explorer ref=\"aDataFrame\"></urth-viz-explorer>\n\n","events":[],"properties":[{"name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bars in barchart, slices in pie chart, etc).\n             ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"name":"showAsTable","type":"Boolean","published":true},{"name":"type","type":"String","desc":"\nThe `urth-viz-chart` chart type to render.\n             ","published":true,"default":"bar","notify":true,"observer":"_typeChanged"},{"name":"_showAsTable","type":"Function","params":[{"name":"type"}],"private":true,"function":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":[],"observers":[],"is":"urth-viz-explorer","contentHref":"bower_components/urth-viz-explorer/urth-viz-explorer.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-explorer"}]},"demos":[]},{"type":"element","desc":"\n`urth-viz-col` creates a Polymer element that adds a hook to existing Handsontable to update column settings afterLoadData\n\n","events":[],"properties":[{"name":"format","type":"String","desc":"\nThe format this column is using. ex: \"$0,0.00\".\n                 ","published":true,"reflectToAttribute":"UNKNOWN"},{"name":"index","type":"Number","desc":"\nThe index this column is, relative to parent table, starting at 0.\n                 ","published":true,"reflectToAttribute":"UNKNOWN"},{"name":"type","type":"String","desc":"\nThe type of format this column is using. ex: \"numeric\".\n                 ","published":true,"reflectToAttribute":"UNKNOWN"}],"behaviors":[],"observers":[],"is":"urth-viz-col","contentHref":"bower_components/urth-viz-col/urth-viz-col.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-col"}]},"demos":[]},{"type":"element","desc":"\nRepresents a widget that creates a word cloud.\n\nExample:\n\n```html\n<urth-viz-cloud id=\"cloud\" data='{\"smaller\": 0.1, \"small\":0.2, \"big\":0.5, \"bigger\":0.8}'></urth-viz-cloud>\n```\n\n","events":[],"properties":[{"name":"data","type":"Object","published":true,"observer":"_dataChanged"},{"name":"_dataChanged","type":"Function","params":[{"name":"newData"}],"private":true,"function":true},{"name":"_resize","type":"Function","params":[],"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronResizableBehavior"],"observers":[],"is":"urth-viz-cloud","contentHref":"bower_components/urth-viz-cloud/urth-viz-cloud.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-cloud"}]},"demos":[]},{"type":"element","desc":"\nRepresents a widget that draws a line chart.\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","published":true,"default":"line","readOnly":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-line","contentHref":"bower_components/urth-viz-line/urth-viz-line.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-line"}]},"demos":[]},{"type":"element","desc":"\nThis elements finds an ipywidget instance in the kernel that is referred to by the name specified in the `ref`\nproperty. It displays the ipywidget in its Local DOM and exposes the ipywidget's traits as properties available\nfor template binding. This element only works against a Python kernel that has ipywidgets installed.\n\nTo use this element, first create an instance of an ipywidget and assign it to a\nvariable name.\n\n```\nslider = IntSlider()\n```\n\nThen use this element to display and interact with the ipywidget by setting the `ref`\nproperty to the variable name\n\n```\n<urth-viz-ipywidgets ref='slider' trait-value='{{aVal}}'></urth-viz-ipywidgets>\n```\n\nTraits for the ipywidgets are made available through the element as bind-able properties. The\nnames for these properties have the form `trait-<name of trait>`.\n\n","events":[],"properties":[{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"modelId","type":"String","desc":"\nThe id of the ipywidget model. This is set through communication with the kernel.\n                 ","published":true,"readOnly":true},{"name":"onKernelReady","type":"Function","params":[{"name":"kernel"}],"function":true},{"name":"onModelIdChange","type":"Function","params":[{"name":"modelid"}],"function":true},{"name":"onModelReady","type":"Function","desc":"\nonModelReady is invoked when have created the model portion of the widget. Sending the\nkernel side the value of `ref`.\n             ","params":[],"function":true},{"name":"ref","type":"String","desc":"\nName of the variable that references the widget to proxy. Must be a widget that is\ndefined in the kernel.\n                 ","published":true,"default":""},{"name":"refresh","type":"Function","desc":"\nSends a sync message to the kernel side. This is intended to make sure this element is bound to the\nlatest object referenced by `ref`.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"refresh","description":null}]},"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"resetDynamicProperties","type":"Function","desc":"\nRemoves all dynamic properties added to this element.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"resetDynamicProperties","description":null}]},"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"setDynamicProperties","type":"Function","desc":"\nSets the specified properties to this instance of an element. The\ndynProps parameter is in the same format as the `properties` object used\nin defining new Polymer elements.\n\n","params":[{"name":"dynProps","desc":"Object with properties to set"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"setDynamicProperties","description":null}]},"function":true},{"name":"traits","type":"Object","desc":"\nObject reflecting the current values of all the traits define in the\nipywidget. This property can be used for binding.\n                 ","published":true,"notify":true},{"name":"widgetModel","type":"Object","desc":"\nThe WidgetModel instance for the ipywidget. This is set once the `modelId` is known.\n                 ","published":true,"readOnly":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__complexObserver","type":"Function","desc":"\nGeneric complex observer to handle changes within arrays and objects\n             ","params":[{"name":"rec"}],"private":true,"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__createAccessors","type":"Function","desc":"\nModified to add `configurable` to the descriptor object to allow for\ndeletion of dynamically added properties.\nsee http://stackoverflow.com/questions/7141210/how-do-i-undo-a-object-defineproperty-call\n             ","params":[{"name":"property"},{"name":"effects"}],"private":true,"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__createBindings","type":"Function","desc":"\nModified from Polymer.Bind.createBindings to allow only createBindings the\ngiven properties and to call our __createAccessors function.\n             ","params":[{"name":"dynProps"}],"private":true,"function":true},{"name":"__setWidgetModel","type":"Function","desc":"\nThis method is acting as a computed property method, but since there are Promises involve, we need\nto set it up using observers.\n             ","params":[{"name":"modelid"}],"private":true,"function":true},{"name":"_createTraitChangeHandler","type":"Function","params":[{"name":"param"}],"private":true,"function":true},{"name":"_createWidgetView","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_isTraitAttribute","type":"Function","params":[{"name":"attr"}],"private":true,"function":true},{"name":"_isUnset","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"name":"_onExecutionComplete","type":"Function","params":[],"private":true,"function":true},{"name":"_onKernelInfo","type":"Function","params":[{"name":"info"}],"private":true,"function":true},{"name":"_onTraitChange","type":"Function","params":[{"name":"argName"},{"name":"argValue"}],"private":true,"function":true},{"name":"_onTraitPropertyChanged","type":"Function","params":[{"name":"rec"}],"private":true,"function":true},{"name":"_onWidgetModelChange","type":"Function","desc":"\nThis method handles setup for the new ipywidget WidgetModel. It will create a new property based on\nthe name of the traits. These new properties will allow data binding and will be kept in sync with\nthe contents of the `traits` property.\n\n             ","params":[],"private":true,"function":true},{"name":"_setupTraitProperties","type":"Function","params":[{"name":"widgetTraits"}],"private":true,"function":true},{"name":"_syncTraitProperty","type":"Function","params":[{"name":"traits"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"name":"_toTraitName","type":"Function","params":[{"name":"attr"}],"private":true,"function":true},{"name":"_toTraitPropertyName","type":"Function","params":[{"name":"traitName"}],"private":true,"function":true},{"name":"_toTraitPropertyObserverName","type":"Function","params":[{"name":"traitName"}],"private":true,"function":true},{"name":"_traitsFromAttributes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.JupyterKernelObserver","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.JupyterKernelObserver","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.JupyterWidgetBehavior","Urth.ExecutionCompleteBehavior","Urth.DynamicPropertiesBehavior","Urth.JupyterKernelObserver"],"observers":[{"javascriptNode":{"type":"Literal","start":1707,"end":1742,"loc":{"start":{"line":57,"column":16},"end":{"line":57,"column":51}},"range":[1707,1742],"value":"_onTraitPropertyChanged(traits.*)","raw":"'_onTraitPropertyChanged(traits.*)'"},"expression":"_onTraitPropertyChanged(traits.*)"},{"javascriptNode":{"type":"Literal","start":1760,"end":1787,"loc":{"start":{"line":58,"column":16},"end":{"line":58,"column":43}},"range":[1760,1787],"value":"__setWidgetModel(modelId)","raw":"'__setWidgetModel(modelId)'"},"expression":"__setWidgetModel(modelId)"},{"javascriptNode":{"type":"Literal","start":1805,"end":1840,"loc":{"start":{"line":59,"column":16},"end":{"line":59,"column":51}},"range":[1805,1840],"value":"_onWidgetModelChange(widgetModel)","raw":"'_onWidgetModelChange(widgetModel)'"},"expression":"_onWidgetModelChange(widgetModel)"}],"is":"urth-viz-ipywidget","contentHref":"bower_components/urth-viz-ipywidget/urth-viz-ipywidget.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-ipywidgets"}]},"demos":[]},{"type":"element","desc":"\nCreates a Polymer element that displays a table with specified data and column headers.\n\nThe table accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.  Will accept a single row as an Array.\n\n2. `columns` should also be of type Array of strings, representing column headers. If undefined, table will not have column headers.\n\n","events":[],"properties":[{"name":"COL_OPTIONS","type":"Array"},{"name":"columns","type":"Array","desc":"\nColumn headers for table. Must be an Array of String.\n                 ","published":true},{"name":"computeTableView","type":"Function","params":[{"name":"datarows"},{"name":"columns"}],"function":true},{"name":"datarows","type":"Array","desc":"\nData rows for table. Must be an Array of Arrays.\n                 ","published":true},{"__fromBehavior":"Urth.DisplayErrorBehavior","name":"displayErrorMessage","type":"Function","desc":"\nDisplays the given error message in the output area associated\nwith this widget.\n\n","params":[{"name":"msg"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"displayErrorMessage","description":null}]},"function":true},{"name":"ROW_HEIGHT","type":"number"},{"name":"rowsVisible","type":"Number","desc":"\nNumber of rows user wants visible at a time,\n(the rest is hidden in scrollable area)\nIf table is shorter in height this number, the shorter height\nis rendered.\n                 ","published":true,"default":15,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizSelectionBehavior","name":"selection","type":"Array","desc":"\nThe data row corresponding to the currently selected row.\nReturns an Array of rows where `multiSelect` is enabled\n                 ","published":true,"default":"UNKNOWN","readOnly":true,"notify":true},{"__fromBehavior":"Urth.VizSelectionBehavior","name":"selectionAsObject","type":"Boolean","desc":"\nFalse by default to return `selection` as an array of values.\nIf true, will return `selection` as an object with key-value pairs (with column names as keys).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizSelectionBehavior","name":"selectionIndex","type":"Array","desc":"\nThe index of the selected data row or rows, an Array of rows where 'multiSelect' is enabled\n                 ","published":true,"default":"UNKNOWN","observer":"_selectionIndexChanged","notify":true},{"__fromBehavior":"Urth.VizSelectionBehavior","name":"selectionInfo","type":"Array","desc":"\nObject containing UI information based on the current selection.\nReturns an Array of Objects where `multiSelect` is enabled.\n                 ","published":true,"default":"UNKNOWN","readOnly":true,"notify":true},{"name":"tableView","type":"Object","desc":"\nFor implementation only, to trigger code when dependent\nattributes change.\n                 ","published":true},{"name":"_calcTableHeight","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.DisplayErrorBehavior","name":"_clearErrorMessages","type":"Function","params":[],"private":true,"function":true},{"name":"_createTable","type":"Function","params":[{"name":"datarows"}],"private":true,"function":true},{"name":"_forceRowSelection","type":"Function","desc":"\nBy setting the col to -1, this forces handson to think that the user clicked on a row header and it goes\nthrough the path of selecting the entire row.\n             ","params":[{"name":"event"},{"name":"coords"}],"private":true,"function":true},{"name":"_handleAfterSort","type":"Function","params":[],"private":true,"function":true},{"name":"_handleSelection","type":"Function","desc":"\nHandle when selection has finished taking place on handson\n             ","params":[{"name":"rowStart"},{"name":"colStart"},{"name":"rowEnd"},{"name":"colEnd"}],"private":true,"function":true},{"name":"_isHeightSet","type":"Function","params":[],"private":true,"function":true},{"name":"_parseColumn","type":"Function","params":[{"name":"column"},{"name":"colSettings"}],"private":true,"function":true},{"name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"name":"_resizeTable","type":"Function","params":[],"private":true,"function":true},{"name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"name":"_updateColumns","type":"Function","params":[{"name":"newColumns"}],"private":true,"function":true},{"name":"_updateDatarows","type":"Function","params":[{"name":"newDataRows"}],"private":true,"function":true},{"name":"_willDataFit","type":"Function","params":[{"name":"datarows"}],"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronResizableBehavior","Urth.VizSelectionBehavior","Urth.DisplayErrorBehavior"],"observers":[],"is":"urth-viz-table","contentHref":"bower_components/urth-viz-table/urth-viz-table.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-table"}]},"demos":[]},{"type":"element","desc":"\nRepresents a widget that draws a scatter chart.\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","published":true,"default":"scatter","readOnly":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-scatter","contentHref":"bower_components/urth-viz-scatter/urth-viz-scatter.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-scatter"}]},"demos":[]},{"type":"element","desc":"\nRepresents a widget that draws a pie chart.\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","published":true,"default":"pie","readOnly":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-pie","contentHref":"bower_components/urth-viz-pie/urth-viz-pie.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-pie"}]},"demos":[]},{"type":"element","desc":"\nInternal element used to render the data within an `urth-core-channel`.\n\n","events":[],"properties":[{"name":"clear","type":"Function","params":[],"function":true},{"name":"data","type":"Object","published":true,"default":"{}"},{"name":"empty","type":"Boolean","published":true},{"name":"name","type":"String","published":true},{"name":"refresh","type":"Function","params":[],"function":true},{"name":"updateData","type":"Function","params":[{"name":"data"}],"function":true},{"name":"_computeDataAsArray","type":"Function","params":[],"private":true,"function":true},{"name":"_computeEmpty","type":"Function","params":[],"private":true,"function":true},{"name":"_updates","type":"Number","published":true,"default":0,"private":true}],"behaviors":[],"observers":[],"is":"urth-core-channel-viewer","contentHref":"bower_components/urth-core-channel/urth-core-channel-viewer.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-channel-viewer"}]},"demos":[]}],"elementsByTagName":{"urth-help":{"type":"element","desc":"\nCreates a Polymer element that displays urth elements documentation page.\n\n","events":[],"properties":[{"name":"docURL","type":"String","published":true},{"name":"getDocUrl","type":"Function","params":[],"function":true},{"__fromBehavior":"Urth.JupyterNotebookEnv","name":"_baseURL","type":"Object","published":true,"default":"UNKNOWN","private":true},{"__fromBehavior":"Urth.JupyterNotebookEnv","name":"_importBaseURL","type":"Object","published":true,"default":"url","private":true}],"behaviors":["Urth.JupyterNotebookEnv"],"observers":[],"is":"urth-help","contentHref":"bower_components/urth-help/urth-help.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-help"}]},"demos":[]},"urth-core-bind":{"type":"element","desc":"\nProvides a mechanism to enable [Polymer binding](https://www.polymer-project.org/1.0/docs/devguide/data-binding.html)\nfeatures between elements across a common data channel. Property updates within\nan `urth-core-bind` template are synchronized with other `urth-core-bind` templates\nto update all related bindings.\n\nExample: _Specifying a value in the input box will update the value in the `span`_\n\n```html\n<template is='urth-core-bind'>\n    <div>Hello <span>{{user}}</span></div>\n</template>\n\n<template is='urth-core-bind'>\n    <input value={{user::input}}></input>\n</template>\n```\n\nBy default, `urth-core-bind` will wait to render the template until all\npreceding `urth-core-import` dependencies have completed. Set the `no-wait`\nattribute on the element to ignore dependencies and render immediately.\n\nExample: _Do not wait for dependencies to load before rendering._\n\n```html\n<template is='urth-core-bind' no-wait>\n    <div>Hello <span>{{user}}</span></div>\n</template>\n```\n\n","events":[{"desc":"\nFired when DOM is stamped by this template.\n\n","jsdoc":{"description":"\nFired when DOM is stamped by this template.\n\n","tags":[{"tag":"event","type":null,"description":"dom-change"}],"orig":"*\n             * Fired when DOM is stamped by this template.\n             *\n             * @event dom-change\n             "},"name":"dom-change","params":[]}],"properties":[{"name":"channel","type":"String","desc":"\nThe name of the channel to use for data binding.\n                 ","published":true,"observer":"_onChannelChange"},{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"noWait","type":"Boolean","desc":"\nDetermines whether to wait for dependencies to load before\nrendering. Set to `true` to render immediately and not wait.\n                 ","published":true,"reflectToAttribute":"UNKNOWN"},{"name":"showLoadingMsg","type":"Function","params":[{"name":"show"}],"function":true},{"name":"_createChannel","type":"Function","params":[],"private":true,"function":true},{"name":"_customRender","type":"Function","desc":"\nInvoked by DomBindBehavior on `attached`. Used to delay rendering\nuntil after dependencies have loaded if `noWait` is not\ntrue.\n             ","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"name":"_onChannelChange","type":"Function","params":[{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"name":"_propertyChanged","type":"Function","params":[{"name":"property"},{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"extends","type":"string","private":true,"configuration":true}],"behaviors":["Urth.DomBindBehavior","Urth.LoggingBehavior"],"observers":[],"is":"urth-core-bind","contentHref":"bower_components/urth-core-bind/urth-core-bind.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-bind"}]},"demos":[]},"urth-core-dataframe":{"type":"element","desc":"\nThis element represents a DataFrame. The `ref` property points to an instance of a DataFrame in the\nkernel. Currently, there is support for:\n\nPandas DataFrame\nPySpark DataFrame\nSpark DataFrame in Scala\nR DataFrame\nSpark DataFrame in R\n\nThe data for the DataFrame is available in a variety of way:\n\nThe `value` property has an Object representation of the DataFrame.\nThe `rows` property has only the data portion of the DataFrame and can be structured as a 2D Array or\nan Array of Objects.\nThe `columns` property has an Array of column names\n\nThe amount of data rows that is made available to this element from the kernel instance is controled by\nthe `limit` property.\n\nExample:\n\n    <urth-core-dataframe id=\"f1\" ref=\"aDataFrame\" value=\"{{df}}\" auto></urth-core-dataframe>\n\n    <urth-core-dataframe id=\"f1\" ref=\"aDataFrame\" rows=\"{{rows}}\" columns=\"{{cols}}\" auto></urth-core-dataframe>\n\n    <urth-core-dataframe id=\"f1\" ref=\"aDataFrame\" rows=\"{{rows}}\" rows-as-object auto></urth-core-dataframe>\n\nThis element also support querying the DataFrame using the `urth-core-query-*` elements as children.\n\nExample:\n    <urth-core-dataframe id=\"f1\" ref=\"aDataFrame\" value=\"{{df}}\">\n        <urth-core-query-filter>aCol > {{someVal}}</urth-core-query-filter>\n        <urth-core-query-group by=\"anotherCol\">\n            <urth-core-query-agg op=\"avg\" col=\"someOtherCol\"></urth-core-query-agg>\n        </urth-core-query-group>\n    </urth-core-dataframe>\n\n","events":[],"properties":[{"name":"auto","type":"Boolean","desc":"\nToggles automatic updates upon the completion of code execution.\n             ","published":true,"default":false},{"name":"busy","type":"Boolean","desc":"\nIf true, it means that the element is waiting on the kernel to return the data\n             ","published":true,"default":false,"notify":true,"readOnly":true},{"name":"columns","type":"Array","desc":"\nAn Array with the column names for the DataFrame\n             ","published":true,"notify":true},{"name":"debug","type":"Boolean","desc":"\nIf true, this element will render a simple table help inspect the data\n             ","published":true,"default":false},{"name":"limit","type":"Number","desc":"\nSets the maximun number of rows to bring to the client.\n             ","published":true,"default":100,"reflectToAttribute":"UNKNOWN","observer":"_onLimitChange"},{"name":"onModel__status__Change","type":"Function","desc":" \nto override onModel__status__Change in jupyter-widget-behavior.html\nWe need to clear error message on status ok\n         ","params":[{"name":"newStatus"}],"function":true},{"name":"onModelReady","type":"Function","desc":"\nonModelReady is invoked when have created the model portion of the widget\n         ","params":[],"function":true},{"name":"onModelValueChange","type":"Function","desc":"\nonModelValueChange is invoked by JupyterWidgetBehavior when the `value` `property in\nthe Backbone model changes.\n         ","params":[{"name":"newVal"}],"function":true},{"name":"query","type":"Array","desc":"\nAn Array with a JSON structures that define queries to perform on the DataFrame.\n             ","published":true,"readOnly":true,"observer":"_onQueryChange"},{"name":"queryChildren","type":"Array","desc":"\nArray with the child elements used to define the query.\n             ","published":true,"readOnly":true},{"name":"queryDelay","type":"Number","desc":"\nTime to debounce synchronizing changes to the query with the kernel component.\n             ","published":true,"default":750},{"name":"ref","type":"String","desc":"\nThe name of the DataFrame variable that this element\nwill bind to.\n             ","published":true,"default":""},{"name":"refresh","type":"Function","desc":"\nUpdate the DataFrame `value` held by this element with\nthe DataFrame's current state on the kernel.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"refresh","description":null}]},"function":true},{"name":"refreshTimeout","type":"Number","desc":"\nAmount of time to wait (milliseconds) for a refresh/sync call to complete. This allows for throttling messages to get the\ndata from the DataFrame. In cases like Spark, getting the data may take a long time and this setting allows\nthrottling request to avoid overloading the DataFrame host.\n             ","published":true,"default":10000},{"name":"rowAsObject","type":"Boolean","desc":"\nControls the shape of the `rows` property. If true, `rows` is an Array of Objects, else `rows` is a 2D\nArray.\n             ","published":true,"default":false},{"name":"rows","type":"Array","desc":"\nAn Array containing the data rows of the DataFrame. If 'row-as-object` is false, this\nproperty will contain a 2D Array where the outer Array contains each row and the inner Array contains\nthe values for each column in the order defined by the `columns` property. If 'row-as-object` is true,\nthis property will contain an Array of Objects, where each Object represents a row of data with column\nvalues keyed by column names.\n             ","published":true,"notify":true},{"name":"value","type":"Object","desc":"\nThe serialized representation of the DataFrame `ref`. The structure contains:\n{\n columns: Array of column names\n data: 2D Array of rows with column values\n index: Array with index values\n}\n             ","published":true,"readOnly":true,"notify":true},{"name":"_columns","type":"Function","desc":"\nReturns the columns portion of the serialized DataFrame\n","params":[{"name":"df","desc":"the serialized DataFrame"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":null,"desc":"the columns array"}},{"name":"_handleChildChanged","type":"Function","params":[],"private":true,"function":true},{"name":"_handleQueryChildrenChanged","type":"Function","params":[],"private":true,"function":true},{"name":"_head","type":"Function","desc":"\nReturns at most 10 elements from the array\n\n","params":[{"name":"rows","desc":"All the data"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"Array","desc":null}},{"name":"_onExecutionComplete","type":"Function","params":[],"private":true,"function":true},{"name":"_onLimitChange","type":"Function","params":[],"private":true,"function":true},{"name":"_onQueryChange","type":"Function","params":[],"private":true,"function":true},{"name":"_query","type":"Function","desc":"\nReturns the structure query based on the child query elements\n","params":[{"name":"queryChildren","desc":"Array of child nodes"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":null,"desc":"the query structure"}},{"name":"_rows","type":"Function","desc":"\nReturns the data portion of the serialized DataFrame as a 2D array or as an Array of Objects depending on the\nvalue of `rowAsObject`.\n","params":[{"name":"df","desc":"the serialized DataFrame"},{"name":"rowAsObject","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","desc":"\nRemove mutation observer\n         ","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.JupyterWidgetBehavior","Urth.ExecutionCompleteBehavior"],"observers":[{"javascriptNode":{"type":"Literal","start":4355,"end":4391,"loc":{"start":{"line":144,"column":12},"end":{"line":144,"column":48}},"range":[4355,4391],"value":"_handleChildChanged(queryChildren)","raw":"'_handleChildChanged(queryChildren)'"},"expression":"_handleChildChanged(queryChildren)"}],"is":"urth-core-dataframe","contentHref":"bower_components/urth-core-dataframe/urth-core-dataframe.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-dataframe"}]},"demos":[]},"urth-core-channel":{"type":"element","desc":"\nAn element that provides [monostate](http://c2.com/cgi/wiki?MonostatePattern)\ndata channels. All instances of `urth-core-channel` have access to the shared\ndata. Use the `register` API to register elements as listeners of the data\nchannel. When a property value change occurs, all listeners of the data channel\nare notified by having the associated property set on the element.\n\nExamples:\n\n```html\n<urth-core-channel id='dataChannel'></urth-core-channel>\n```\n\nProperty values can be set and retrieved using the `set` and `get`\nAPI:\n\n```javascript\ndocument.getElementById('dataChannel').set('user', 'Luke');\n```\n\nIf the instance is included in a Polymer element, values can be set\nand retrieved as follows:\n\n```html\n<urth-core-channel id='dataChannel'></urth-core-channel>\n...\nthis.$.dataChannel.set('user', 'Luke');\nthis.$.dataChannel.get('user') // Returns 'Luke'\n```\n\nRegister an element with the data channel to receive property updates:\n\n```html\n<urth-core-channel id='dataChannel'></urth-core-channel>\n<template is='dom-bind' id='mytemplate'>\n    <div><span>{{user}}</span>, may the force be with you</div>\n</template>\n...\nvar dataChannel = document.getElementById('dataChannel');\nvar mytemplate = document.getElementById('mytemplate');\ndataChannel.register(mytemplate);\ndataChannel.set('user', 'Luke');\n```\n\n","events":[],"properties":[{"name":"clear","type":"Function","desc":"\nClears all the data in the channel.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"clear","description":null}]},"function":true},{"name":"debug","type":"Boolean","desc":"\nA boolean that when set to true renders the content of the channel\nin the DOM.\n                 ","published":true,"default":false},{"name":"get","type":"Function","desc":"\nRetrieves the value of the specified key on the channel or\nundefined if the key has not been set.\n\n","params":[{"name":"key","type":"String","desc":"The key of the value to return."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"get","description":null}]},"function":true,"return":{"type":"Object","desc":"The value stored for the key or undefined."}},{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"name","type":"String","desc":"\nThe name of the channel to use.\n                 ","published":true,"observer":"_onNameChange","notify":true,"reflectToAttribute":"UNKNOWN","default":"default"},{"name":"register","type":"Function","desc":"\nRegisters an element as a listener for data channel changes.\nThe element will have its property set when a key is set\non the channel.\n\n","params":[{"name":"element","type":"HTMLElement","desc":"The DOM element to register."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"register","description":null}]},"function":true},{"name":"registeredElements","type":"Array","desc":"\nAn array of DOM elements registered with the channel.\n                 ","published":true,"notify":true,"readOnly":true,"default":"[]"},{"name":"reload","type":"Function","desc":"\nReloads the data on the channel from saved values in storage.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"save","description":null}]},"function":true},{"name":"save","type":"Function","desc":"\nSaves the data on the channel to storage.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"save","description":null}]},"function":true},{"name":"set","type":"Function","desc":"\nSets the value of a key on the channel.\n\n","params":[{"name":"key","type":"String","desc":"The key to be associated with the value."},{"name":"value","type":"Object","desc":"The value to set."},{"name":"options","type":"Object","desc":"Additional options. Currently\nonly `oldValue` is supported. If not specified, the current value\nwill be retrieved with the `get` method."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"set","description":null}]},"function":true},{"name":"unregister","type":"Function","desc":"\nRemoves the specified element as a listener on the channel.\nIf no element is specified then all registrations for the channel\nare removed.\n\n","params":[{"name":"element","type":"HTMLElement","desc":"The DOM element to register."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"unregister","description":null}]},"function":true},{"name":"unwatch","type":"Function","desc":"\nRemoves a watch function from the specified property key.\nIf no key is specified then all watchers for the channel\nare removed. If a key is specified but no handler is specified\nthen all watchers for the key are removed.\n\n","params":[{"name":"key","type":"String","desc":"The property to unwatch."},{"name":"handler","type":"Function","desc":"The previously registered watch function."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"unregister","description":null}]},"function":true},{"name":"watch","type":"Function","desc":"\nRegisters a function that will be invoked when the specified\nproperty is modified.\n\n","params":[{"name":"key","type":"String","desc":"The property to watch."},{"name":"handler","type":"Function","desc":"(key, oldValue, value) Function to\ninvoke when property is modified."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"watch","description":null}]},"function":true},{"name":"watchers","type":"Object","desc":"\nAn object containing the properties being watched and\nthe associated handlers. Keys of the object are the\nproperties being watched. Value of the keys is an\narray of functions.\n                 ","published":true,"notify":true,"readOnly":true,"default":"{}"},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"name":"_onChannelItemChange","type":"Function","params":[{"name":"item"}],"private":true,"function":true},{"name":"_onNameChange","type":"Function","params":[{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"name":"_updateData","type":"Function","params":[{"name":"item"}],"private":true,"function":true},{"name":"_updateRegistered","type":"Function","params":[{"name":"key"},{"name":"newVal"},{"name":"oldVal"},{"name":"updateWatchers"},{"name":"root"}],"private":true,"function":true},{"name":"_updateViewer","type":"Function","params":[],"private":true,"function":true},{"name":"_updateWatchers","type":"Function","params":[{"name":"key"},{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.LoggingBehavior"],"observers":[],"is":"urth-core-channel","contentHref":"bower_components/urth-core-channel/urth-core-channel.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-channel"}]},"demos":[]},"urth-core-channel-broker":{"type":"element","desc":"\n`urth-core-channel-broker` is a singleton element that is used to\ncoordinate communication between `urth-core-channel` elements and\nthe model. _This element is not intended for use as a standalone element._\n\nExample: _Retrieve the singleton instance._\n\n```javascript\nvar broker = window.Urth['urth-core-channel-broker'].getChannelBroker();\n```\n\n","events":[{"desc":"\nFired on any registered `urth-core-channel` elements when a\nproperty is modified on the channel.\n\n","jsdoc":{"description":"\nFired on any registered `urth-core-channel` elements when a\nproperty is modified on the channel.\n\n","tags":[{"tag":"event","type":null,"description":"urth-channel-data-update"}],"orig":"*\n             * Fired on any registered `urth-core-channel` elements when a\n             * property is modified on the channel.\n             *\n             * @event urth-channel-data-update\n             "},"name":"urth-channel-data-update","params":[]}],"properties":[{"name":"addChannelElement","type":"Function","desc":"\nRegisters an `urth-core-channel` element with the\nspecified channel.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel."},{"name":"element","type":"HTMLElement","desc":"An `urth-core-channel` DOM element."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"addChannelElement","description":null}]},"function":true,"return":{"type":"Object","desc":"The data currently set on the specified channel."}},{"name":"clear","type":"Function","desc":"\nClears all the data in the specified channel.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"clear","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"createModel","type":"Function","desc":"\nCreates a backbone model and a comm connection with an instance\nof the specified kernelClass on the kernel.\n\nUpon completion, invokes `onModelReady` with the created model.\n\n","params":[{"name":"kernelClass","type":"String","desc":"A class name to instantiate kernel side."},{"name":"retryCount","type":"Number","desc":"The number of times to retry the model creation if a failure occurs."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"createModel","description":null}]},"function":true},{"name":"get","type":"Function","desc":"\nRetrieves the value of the specified key on the specified\nchannel or undefined if the key has not been set.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel to use."},{"name":"key","type":"String","desc":"The key of the value to return."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"get","description":null}]},"function":true,"return":{"type":"Object","desc":"The value stored for the key or undefined."}},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"getModelStatusMsg","type":"Function","desc":"\nreturns the model's __status__ object,\nso elements who has this behavior can check for error if __status__.status is \"error\"\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"getModelStatusMsg","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"isConnected","type":"Function","desc":"\nReturns the state of the connection to the kernel side proxy.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"isConnected","description":null}]},"function":true,"return":{"type":"Boolean","desc":"Returns `true` if the element is able to communicate with the\n                 kernel side proxy."}},{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"onKernelReady","type":"Function","desc":"\nWhen a kernel is available and ready, this handler sends the request\nto create a new kernel side channels proxy and establishes the comm.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"onKernelReady","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"onModel__status__Change","type":"Function","desc":"\nClears or displays error messages according to the status\nsent from the kernel. The status is \"ok\" when execution was\nsuccessful, and \"error\" when an error occurred.\n             ","params":[{"name":"newVal"}],"function":true},{"name":"onModelChange","type":"Function","desc":"\nCalls to this method occur when users make changes to channel data using\nthe kernel language.\n\n","params":[{"name":"options","type":"Object","desc":null}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"onModelChange","description":null}]},"function":true},{"name":"onModelReady","type":"Function","params":[],"function":true},{"name":"onSave","type":"Function","desc":"\nSaves the data in all of the currently defined channels.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"onSave","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"parentCell","type":"Function","desc":"\nReturns the parent Code cell that may contain this element.\n\nNote: Not all element will be under a code cell, so this might return null.\n\n","params":[],"function":true},{"name":"reload","type":"Function","desc":"\nReloads the data on the channel from saved values in storage\nfor the specified channel name.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel to reload."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"save","description":null}]},"function":true},{"name":"removeChannelElement","type":"Function","desc":"\nUnregisters an `urth-core-channel` element with the specified\nchannel.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel."},{"name":"element","type":"HTMLElement","desc":"An `urth-core-channel` DOM element."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"removeChannelElement","description":null}]},"function":true,"return":{"type":"Object","desc":"The data associated with the specified channel."}},{"name":"save","type":"Function","desc":"\nSaves the data on the channel to storage.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel to save."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"save","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"send","type":"Function","desc":"\nSends a message to the kernel side proxy of this element. A promise is returned to notify when the message\nhad been processed by the kernel (i.e. status back to idle). It is not intended to get data, rather meant\nto allow clients to throttle messages.\n\n","params":[{"name":"msg","type":"Object","desc":"A json message."},{"name":"timeout","type":"Number","desc":"The time in (milliseconds) to wait for a response before rejecting the promise. If not set, the promise may never be rejected."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"send","description":null}]},"function":true,"return":{"type":"Promise","desc":null}},{"name":"set","type":"Function","desc":"\nSets the value of a key on the channel. Setting a value\nwill set the property value on all registered elements. Creates\nthe channel if it does not exist. Fires an `urth-channel-data-update`\nevent on any `urth-core-channel-elements` registered with the\nspecified channel.\n\n","params":[{"name":"channelName","type":"String","desc":"The name of the channel."},{"name":"key","type":"String","desc":"The key to be associated with the value."},{"name":"value","type":"Object","desc":"The value to set."},{"name":"options","type":"Object","desc":"Additional options. Currently\nonly `oldValue` is supported. If not specified, the current value\nwill be retrieved with the `get` method."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"set","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"sync","type":"Function","desc":"\nSynchronizes the state provided with the kernel side proxy of this element.\n\n","params":[{"name":"values","type":"Object","desc":"An object containing the state to synchronize.\n                The keys match properties on the kernel side proxy."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"sync","description":null}]},"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_callbacks","type":"Function","params":[],"private":true,"function":true},{"name":"_createGlobalChannel","type":"Function","params":[{"name":"channelName"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_doCreateModel","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_getGlobalChannel","type":"Function","params":[{"name":"channelName"}],"private":true,"function":true},{"name":"_getOrCreateGlobalChannel","type":"Function","params":[{"name":"channelName"}],"private":true,"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_handleCommDisconnect","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_isCommDisposed","type":"Function","desc":"\nDetermine if the comm object is disposed (closed). This function works with both\nlegacy and jupyter-js-services' comm objects.\n","params":[{"name":"comm","type":"(IComm|Comm)","desc":null}],"private":true,"function":true,"return":{"type":"boolean","desc":null}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_onModelChange","type":"Function","params":[{"name":"options"}],"private":true,"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_retryCreateModel","type":"Function","params":[],"private":true,"function":true},{"name":"_sendItem","type":"Function","desc":"\nSends the specified update to the model.\n\n","params":[{"name":"key","type":"String","desc":"The key that is being modified."},{"name":"newVal","type":"Object","desc":"The new value to set for the key."},{"name":"oldVal","type":"Object","desc":"The old value for the key."},{"name":"channelName","type":"String","desc":"The string name of the channel to update."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"sendItem","description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_unRegisterModelCallbacks","type":"Function","desc":"\nUnregister event callbacks associated with the model.\n             ","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.JupyterWidgetBehavior","name":"_unRegisterNotebookCallbacks","type":"Function","desc":"\nUnregister event callbacks associated with the notebook.\n             ","params":[],"private":true,"function":true},{"name":"_validPath","type":"Function","desc":"\nDecides whether the given string is valid for use.\n\n","params":[{"name":"path","type":"String","desc":"The path string to evalute."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"_validPath","description":null}]},"private":true,"function":true,"return":{"type":"Boolean","desc":"true if the path is valid."}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.JupyterSaveBehavior","name":"created","type":"Function","params":[{"name":"event"},{"name":"callback"}],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.JupyterSaveBehavior","name":"detached","type":"Function","params":[{"name":"event"},{"name":"callback"}],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.JupyterWidgetBehavior","Urth.JupyterKernelObserver","Urth.JupyterSaveBehavior"],"observers":[],"is":"urth-core-channel-broker","contentHref":"bower_components/urth-core-channel/urth-core-channel-broker.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-channel-broker"}]},"demos":[]},"urth-core-channel-item":{"type":"element","desc":"\nA simple element that provides a `key` and `value` attribute. This\nelement is typically used with `urth-core-channel`.\n\nExample: Initialize channel data.\n\n```html\n<urth-core-channel>\n    <urth-core-channel-item key='foo' value='bar'></urth-core-channel-item>\n    <urth-core-channel-item key='bar' value='none'></urth-core-channel-item>\n</urth-core-channel>\n```\n\n","events":[{"desc":"\nFired when key or value changes.\n\n","jsdoc":{"description":"\nFired when key or value changes.\n\n","tags":[{"tag":"event","type":null,"description":"urth-core-channel-item-change"},{"tag":"param","type":"{key: string, value: object}","name":"detail","description":"    key: The property name.\n    value: The property value."}],"orig":"*\n             * Fired when key or value changes.\n             *\n             * @event urth-core-channel-item-change\n             * @param {{key:string, value:object}} detail -\n             *     key: The property name.\n             *     value: The property value.\n             "},"name":"urth-core-channel-item-change","params":[{"type":"{key: string, value: object}","desc":"    key: The property name.\n    value: The property value.","name":"detail"}]}],"properties":[{"name":"key","type":"String","desc":"The key for the data property. ","published":true},{"name":"value","type":"Object","desc":"The value of the data property. ","published":true},{"name":"_notifyItemChange","type":"Function","params":[],"private":true,"function":true}],"behaviors":[],"observers":[{"javascriptNode":{"type":"Literal","start":521,"end":552,"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":47}},"range":[521,552],"value":"_notifyItemChange(key, value)","raw":"'_notifyItemChange(key, value)'"},"expression":"_notifyItemChange(key, value)"}],"is":"urth-core-channel-item","contentHref":"bower_components/urth-core-channel/urth-core-channel-item.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Framework"},{"tag":"element","type":null,"description":"urth-core-channel-item"}]},"demos":[]},"urth-core-query-filter":{"type":"element","desc":"\nThis element is used to define a filter clause. It uses the text content as the area\nfor the filter expression to allow the flexibility of complex filter. The content of\nthe filter expression depends on the type of DataFrame. Please refer to the following\nfor details:\n\n- Pandas DataFrame: http://pandas.pydata.org/pandas-docs/version/0.18.1/generated/pandas.DataFrame.query.html\n- PySpark DataFrame: https://spark.apache.org/docs/1.5.2/api/python/pyspark.sql.html#pyspark.sql.DataFrame.filter\n- Scala Spark DataFrame: https://spark.apache.org/docs/1.6.1/api/java/org/apache/spark/sql/DataFrame.html#filter(java.lang.String)\n- R DataFrame: https://stat.ethz.ch/R-manual/R-devel/library/base/html/data.frame.html\n- SparkR DataFrame: https://spark.apache.org/docs/latest/api/R/filter.html\n\nExample:\n\n```\n<urth-core-dataframe ref=\"someDf\">\n    <urth-core-query-filter>someCol = value and anotherCor = {{bindingVar}}</urth-core-query-filter>\n<urth-core-dataframe>\n```\n\n\n","events":[],"properties":[{"name":"disabled","type":"Boolean","desc":"\nIf false, this element will return an undefined query. It basically\nallows disabling the filter on a condition.\n                 ","published":true,"default":false},{"name":"expression","type":"String","desc":"\nThe cleaned up expression from text content\n                 ","published":true,"notify":true},{"name":"query","type":"Object","desc":"\nThe structure query\n                 ","published":true,"notify":true},{"name":"_buildQuery","type":"Function","desc":"\nBuilds the query structure that is sent to the kernel\n","params":[{"name":"expression"},{"name":"disabled"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_contentChanged","type":"Function","desc":"\nConstruct a cleaned up expression based on text content\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"attached","type":"Function","desc":"\nAdds a mutation observer to see changes in the text content\n             ","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","desc":"\nRemove mutation observer\n             ","params":[],"private":true,"configuration":true,"function":true}],"behaviors":[],"observers":[],"is":"urth-core-query-filter","contentHref":"bower_components/urth-core-dataframe/urth-core-query-filter.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-query-filter"}]},"demos":[]},"urth-core-query-agg":{"type":"element","desc":"\nThis element is used to define an aggregate function to perform on grouped data. It is intended\nas a child element of `<urth-core-query-group`>. The `op` property defines a supported aggregate\nfunction for the type of DataFrame. The `col` property is a valid column name for which to perform\nthe aggregation. Please refer to the following for details:\n\n- Pandas DataFrame: http://pandas.pydata.org/pandas-docs/version/0.16.0/groupby.html#applying-different-functions-to-dataframe-columns\n- PySpark DataFrame: http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.GroupedData.agg\n- Scala Spark DataFrame: https://spark.apache.org/docs/1.4.0/api/java/org/apache/spark/sql/GroupedData.html#agg(org.apache.spark.sql.Column,%20scala.collection.Seq)\n- R DataFrame: https://stat.ethz.ch/R-manual/R-devel/library/stats/html/aggregate.html\n- SparkR DataFrame: https://spark.apache.org/docs/latest/api/R/groupBy.html\n\nExample:\n\n```\n<urth-core-dataframe ref=\"someDf\">\n    <urth-core-query-group by=\"{{aCol}}\">\n        <urth-core-query-agg op=\"sum\" col=\"someCol\"></urth-core-query-agg>\n    </urth-core-query-group>\n<urth-core-dataframe>\n```\n\n","events":[],"properties":[{"name":"col","type":"String","desc":"\nName of column\n                 ","published":true},{"name":"isValid","type":"Function","desc":"\nTrue if both op and col are set\n             ","params":[{"name":"op"},{"name":"col"}],"function":true},{"name":"op","type":"String","desc":"\nName of aggregate operation\n                 ","published":true},{"name":"valid","type":"Boolean","desc":"\nTrue if both op and col are set\n                 ","published":true,"notify":true},{"name":"_contentChanged","type":"Function","params":[],"private":true,"function":true}],"behaviors":[],"observers":[{"javascriptNode":{"type":"Literal","start":827,"end":853,"loc":{"start":{"line":37,"column":16},"end":{"line":37,"column":42}},"range":[827,853],"value":"_contentChanged(op, col)","raw":"'_contentChanged(op, col)'"},"expression":"_contentChanged(op, col)"}],"is":"urth-core-query-agg","contentHref":"bower_components/urth-core-dataframe/urth-core-query-agg.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-query-agg"}]},"demos":[]},"urth-core-query-group":{"type":"element","desc":"\nThis element is used to define a group clause. The `by` property is a comma separated string of column names.\nThe aggregate calculations are done by placing `urth-core-query-agg` elements as children.\n\nExample:\n\n```\n<urth-core-dataframe ref=\"someDf\">\n    <urth-core-query-group by=\"{{aCol}}\">\n        <urth-core-query-agg op=\"sum\" col=\"someCol\"></urth-core-query-agg>\n    </urth-core-query-group>\n<urth-core-dataframe>\n```\n\n","events":[],"properties":[{"name":"aggregates","type":"Array","desc":"\nAn array containing the aggregate clause structure\n                 ","published":true},{"name":"by","type":"String","desc":"\nComma separated string of column names\n                 ","published":true},{"name":"isValid","type":"Function","desc":"\nTrue if the value of `by` is correctly set to one or more columns and there is at least on\naggregate clause.\n             ","params":[{"name":"__by"},{"name":"aggregates"}],"function":true},{"name":"query","type":"Object","desc":"\nThe structure query\n                 ","published":true,"notify":true},{"name":"valid","type":"Boolean","desc":"\nTrue if the values of `by` is set to at least one column and there is at least on aggregate clause\n                 ","published":true,"notify":true},{"name":"__by","type":"Object","published":true,"private":true},{"name":"_buildQuery","type":"Function","desc":"\nBuilds the query structure that is sent to the kernel\n","params":[{"name":"__by"},{"name":"aggregates"},{"name":"valid"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_contentChanged","type":"Function","desc":"\nBuilds an array with aggregate structures of the form\n\n{\n   op: \"an operation\"\n   col: \"a column name\"\n}\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.QueryBehavior","name":"_toStringOrArray","type":"Function","desc":"\nTakes a comma separated string and return a single String value is one element or an array of Strings\n","params":[{"name":"commaStr","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"attached","type":"Function","desc":"\nAdds a mutation observer to react to changes to count of `urth-core-query-agg` child\nelements.\n             ","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","desc":"\nRemove mutation observer\n             ","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true}],"behaviors":["Urth.QueryBehavior"],"observers":[],"is":"urth-core-query-group","contentHref":"bower_components/urth-core-dataframe/urth-core-query-group.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-query-group"}]},"demos":[]},"urth-core-query-sort":{"type":"element","desc":"\nThis element is used to define a sort clause. The 2 main properties are:\n\nby - comma separated string of column names\ndirection - comma separated string of asc|desc for the sort direction\n\nExample:\n\n```\n<urth-core-dataframe ref=\"someDf\">\n    <urth-core-query-sort by=\"a,b,c\" direction=\"asc,asc,desc\"></urth-core-query-sort>\n<urth-core-dataframe>\n```\n\n","events":[],"properties":[{"name":"by","type":"String","desc":"\nComma separated string of column names\n                 ","published":true},{"name":"direction","type":"String","desc":"\nComma separated string of asc|desc\n                 ","published":true},{"name":"isValid","type":"Function","desc":"\nReturns true if the paramters of the query are valid\n             ","params":[{"name":"__by"},{"name":"__direction"}],"function":true},{"name":"query","type":"Object","desc":"\nThe structure query\n                 ","published":true,"notify":true},{"name":"valid","type":"Boolean","desc":"\nTrue if the values of `by` and `direction` are compatible in terms\nof length.\n                 ","published":true,"notify":true},{"name":"__by","type":"Object","published":true,"private":true},{"name":"__direction","type":"Object","published":true,"private":true},{"name":"_buildQuery","type":"Function","desc":"\nBuilds the query structure that is sent to the kernel\n","params":[{"name":"__by"},{"name":"__direction"},{"name":"valid"}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.QueryBehavior","name":"_toStringOrArray","type":"Function","desc":"\nTakes a comma separated string and return a single String value is one element or an array of Strings\n","params":[{"name":"commaStr","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true}],"behaviors":["Urth.QueryBehavior"],"observers":[],"is":"urth-core-query-sort","contentHref":"bower_components/urth-core-dataframe/urth-core-query-sort.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-query-sort"}]},"demos":[]},"urth-core-function":{"type":"element","desc":"\nCreates a client side proxy to a function defined in the kernel. This function is specified by\nname using the `ref` attribute.\n\nThe elements allows setting parameters in 2 ways:\n\n1. Using properties named in the patters `arg-<parameter name>`\n    <urth-core-function ref=\"aFunction\" arg-x='5' arg-y='4'></urth-core-function>\n\n2. Using the `args` property. The `args` property is a JSON Object where the keys are the parameter names\n    <urth-core-function ref=\"aFunction\" args='{\"x\":5, \"y\":4}'></urth-core-function>\n\nBoth examples are equivalent to invoking `aFunction(x=5, y=4)`\n\n`urth-core-function` will invoke in the following ways:\n\n 1. By calling the `invoke` method using Javascript\n 2. By setting the `auto` property and it automatically invokes when parameters set\n 3. By handling the `click` event of a child element. For example, just placing a `button` inside this element.\n\n\nNote that when using the 'click' event approach described above in #3, a click on any child will trigger an invocation.\n\n","events":[],"properties":[{"name":"args","type":"Object","desc":"\nObject reflecting the current values of the parameters to the\nfunction. This property can be used for binding.\n                 ","published":true,"notify":true},{"name":"auto","type":"Boolean","desc":"\nControls if the function is invoked automatically on any\nchange to its parameters, and whether the `signature` is\nrefreshed after each code execution.\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"name":"delay","type":"Number","desc":"\nSets a delay time, in milliseconds, for debouncing the\ninvocation of the function. This time will debounce for\nevery argument change as well as every call to invoke.\n                 ","published":true},{"name":"invoke","type":"Function","desc":"\nForces an invocation of the function\n\n","params":[{"name":"skipValidate","type":"boolean","desc":"Optional flag to skip validation of params before sending message to invoke"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"invoke","description":null}]},"function":true},{"name":"isReady","type":"Boolean","desc":"\nFlag to signal that the function is ready to be called.\nReady means that the signature of the function is known and\nany required arguments have values assigned.\n                 ","published":true,"readOnly":true,"notify":true},{"name":"isValid","type":"Function","desc":"\nFunction is valid if all necessary parameter for the function are set. Necessary parameters refers to\nparameters that are listed and do not have a default value.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"isValid","description":null}]},"function":true,"return":{"type":"boolean","desc":"true if all necessary parameters are set, else false"}},{"name":"limit","type":"Number","desc":"\nSets the maximun number of rows to bring to the client.\n                 ","published":true,"default":100,"reflectToAttribute":"UNKNOWN","observer":"_onLimitChange"},{"name":"onModelReady","type":"Function","desc":"\nonModelReady is invoked when have created the model portion of the widget\n             ","params":[],"function":true},{"name":"onModelResultChange","type":"Function","desc":"\nonModelResultChange is invoked by JupyterWidgetBehavior when the `result` property in\nthe Backbone model changes.\n             ","params":[{"name":"newVal"}],"function":true},{"name":"onModelSignatureChange","type":"Function","params":[{"name":"newVal"}],"function":true},{"name":"ref","type":"String","desc":"\nName of the function to proxy. Must be a function that is\ndefined in the kernel.\n                 ","published":true,"default":""},{"name":"refresh","type":"Function","desc":"\nUpdate the `signature` held by this element with\nthe function signature's current state on the kernel.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"refresh","description":null}]},"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"resetDynamicProperties","type":"Function","desc":"\nRemoves all dynamic properties added to this element.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"resetDynamicProperties","description":null}]},"function":true},{"name":"result","type":"Object","desc":"\nObject representing the function return value after invocation.\n                 ","published":true,"readOnly":true,"notify":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"setDynamicProperties","type":"Function","desc":"\nSets the specified properties to this instance of an element. The\ndynProps parameter is in the same format as the `properties` object used\nin defining new Polymer elements.\n\n","params":[{"name":"dynProps","desc":"Object with properties to set"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"setDynamicProperties","description":null}]},"function":true},{"name":"signature","type":"Object","desc":"\nDescribes the signature of the parameters to the function.\nThis object will contain objects keyed by the parameter name\nand information about type and requirement. It is used to\ndetermine if the current arguments are in a valid state to\ninvoke the function.\n                 ","published":true,"readOnly":true,"observer":"_onSignatureChange"},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__complexObserver","type":"Function","desc":"\nGeneric complex observer to handle changes within arrays and objects\n             ","params":[{"name":"rec"}],"private":true,"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__createAccessors","type":"Function","desc":"\nModified to add `configurable` to the descriptor object to allow for\ndeletion of dynamically added properties.\nsee http://stackoverflow.com/questions/7141210/how-do-i-undo-a-object-defineproperty-call\n             ","params":[{"name":"property"},{"name":"effects"}],"private":true,"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__createBindings","type":"Function","desc":"\nModified from Polymer.Bind.createBindings to allow only createBindings the\ngiven properties and to call our __createAccessors function.\n             ","params":[{"name":"dynProps"}],"private":true,"function":true},{"name":"_computeReady","type":"Function","desc":"\nCurrently using isValid as a way to compute isReady. isValid includes the check for available signature.\n             ","params":[{"name":"args"},{"name":"signature"}],"private":true,"function":true},{"name":"_createArgChangeHandler","type":"Function","params":[{"name":"param"}],"private":true,"function":true},{"name":"_isParameterAttribute","type":"Function","params":[{"name":"attr"}],"private":true,"function":true},{"name":"_isParameterUnset","type":"Function","desc":"\nReturns false if paramValue is undefined, null and NaN.\n\n","params":[{"name":"paramValue","type":"*","desc":"Any value sent to test"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"_isParameterUnset","description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"true if considered unset"}},{"name":"_onArgsPropertyChanged","type":"Function","params":[{"name":"rec"}],"private":true,"function":true},{"name":"_onExecutionComplete","type":"Function","params":[],"private":true,"function":true},{"name":"_onLimitChange","type":"Function","params":[{"name":"limit"}],"private":true,"function":true},{"name":"_onParameterChange","type":"Function","params":[{"name":"argName"},{"name":"argValue"}],"private":true,"function":true},{"name":"_onSignatureChange","type":"Function","desc":"\nThis method handles changes to the signature of the method. It will create a new property based on\nthe name of the parameter. These new properties will allow data binding and will be kept in sync with\nthe contents of the `args` property.\n\n             ","params":[{"name":"sig"}],"private":true,"function":true},{"name":"_paramsFromAttributes","type":"Function","params":[],"private":true,"function":true},{"name":"_serializeParamsForSend","type":"Function","desc":"\nBuilds the `args` section of the 'invoke' message by serializing each\nparam as necessary.\n             ","params":[],"private":true,"function":true},{"name":"_syncParamAttributes","type":"Function","params":[{"name":"params"}],"private":true,"function":true},{"name":"_toParamName","type":"Function","params":[{"name":"attr"}],"private":true,"function":true},{"name":"_toParamPropertyName","type":"Function","params":[{"name":"paramName"}],"private":true,"function":true},{"name":"_toParamPropertyObserverName","type":"Function","params":[{"name":"paramName"}],"private":true,"function":true},{"name":"_tryInvoke","type":"Function","params":[],"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.JupyterWidgetBehavior","Urth.ExecutionCompleteBehavior","Urth.DynamicPropertiesBehavior"],"observers":[{"javascriptNode":{"type":"Literal","start":3436,"end":3468,"loc":{"start":{"line":104,"column":16},"end":{"line":104,"column":48}},"range":[3436,3468],"value":"_onArgsPropertyChanged(args.*)","raw":"'_onArgsPropertyChanged(args.*)'"},"expression":"_onArgsPropertyChanged(args.*)"}],"is":"urth-core-function","contentHref":"bower_components/urth-core-function/urth-core-function.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-function"}]},"demos":[]},"urth-core-import":{"type":"element","desc":"\nAdds functionality to `<link>` to provide a mechanism to\ninstall web components registered as [bower](http://bower.io/) packages. This\nelement works with a server side REST endpoint to install the specified package\nand then upon successfull install, injects the appropriate HTML import into the page.\n\nThe `href` attribute should be specified as a relative path as the appropriate\nbase URL for the environment will be prefixed automatically. In the notebook\nall `href` values should be of the form `urth_components/<package_name>/<file>`.\n\nExample: _Install and import the paper-slider element_\n\n```html\n<link rel='import' href='urth_components/paper-slider/paper-slider.html'\n       is='urth-core-import' package='PolymerElements/paper-slider'>\n```\n\n","events":[{"desc":"\nfired when the specified package or href finishes loading. Listen\nto `load` and `error` and `importerror` events to determine success\nor failure of loading.\n\n","jsdoc":{"description":"\nfired when the specified package or href finishes loading. Listen\nto `load` and `error` and `importerror` events to determine success\nor failure of loading.\n\n","tags":[{"tag":"event","type":null,"description":"`finished`"}],"orig":"*\n         * fired when the specified package or href finishes loading. Listen\n         * to `load` and `error` and `importerror` events to determine success\n         * or failure of loading.\n         *\n         * @event `finished`\n         "},"name":"`finished`","params":[]},{"desc":"\nfired if the specified package or href fails to load.\n\n","jsdoc":{"description":"\nfired if the specified package or href fails to load.\n\n","tags":[{"tag":"event","type":null,"description":"`importerror`"}],"orig":"*\n         * fired if the specified package or href fails to load.\n         *\n         * @event `importerror`\n         "},"name":"`importerror`","params":[]},{"desc":"\nfired if the specified package or href loads successfully.\n\n","jsdoc":{"description":"\nfired if the specified package or href loads successfully.\n\n","tags":[{"tag":"event","type":null,"description":"`load`"}],"orig":"*\n         * fired if the specified package or href loads successfully.\n         *\n         * @event `load`\n         "},"name":"`load`","params":[]},{"desc":"\nfired when the specified package or href begins loading.\n\n","jsdoc":{"description":"\nfired when the specified package or href begins loading.\n\n","tags":[{"tag":"event","type":null,"description":"`loading`"}],"orig":"*\n         * fired when the specified package or href begins loading.\n         *\n         * @event `loading`\n         "},"name":"`loading`","params":[]}],"properties":[{"name":"debug","type":"Boolean","desc":"\nIf `true`, console output will be written to indicate the\nprogress of importing the specified `package`.\n            ","published":true,"default":false},{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"package","type":"String","desc":"\nThe project dependency to load. Any endpoints that are\nvalid for the [`bower install`](http://bower.io/docs/api/#install)\ncommand may be specified.\n             ","published":true,"observer":"_packageChanged","reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.JupyterNotebookEnv","name":"_baseURL","type":"Object","published":true,"default":"UNKNOWN","private":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_downloadPackage","type":"Function","params":[{"name":"successCB"},{"name":"errorCB"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_getImportEndpointURL","type":"Function","params":[{"name":"baseURL"}],"private":true,"function":true},{"__fromBehavior":"Urth.JupyterNotebookEnv","name":"_importBaseURL","type":"Object","published":true,"default":"url","private":true},{"name":"_importEndpointURL","type":"Object","desc":"\nThis is the URL to the import endpoint on the notebook.\n             ","published":true,"private":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"name":"_onHrefAttrChange","type":"Function","params":[{"name":"newHref"}],"private":true,"function":true},{"name":"_onLinkLoad","type":"Function","params":[],"private":true,"function":true},{"name":"_onLoadError","type":"Function","params":[{"name":"msg"}],"private":true,"function":true},{"name":"_onLoadSuccess","type":"Function","params":[],"private":true,"function":true},{"name":"_packageChanged","type":"Function","params":[{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"name":"_prefixHref","type":"Function","desc":" the notebook initialization and cell imports.","params":[{"name":"newHref"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"attributeChanged","type":"Function","params":[{"name":"name"},{"name":"type"}],"private":true,"configuration":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"extends","type":"string","private":true,"configuration":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.JupyterNotebookEnv","Urth.LoggingBehavior"],"observers":[],"is":"urth-core-import","contentHref":"bower_components/urth-core-import/urth-core-import.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-import"}]},"demos":[]},"urth-core-import-broker":{"type":"element","desc":"\n`urth-core-import-broker` is a singleton element that is used to\nkeep track of pending imports and package downloads for `urth-core-import`\nelements. _This element is not intended for use as a standalone element._\n\nExample: _Retrieve the singleton instance._\n\n```javascript\nvar broker = window.Urth['urth-core-import-broker'].getImportBroker();\n```\n\n","events":[],"properties":[{"name":"addImport","type":"Function","desc":"\nTracks the completion of an `urth-core-import` element.\n\n","params":[{"name":"importElement","type":"HTMLElement","desc":"The `urth-core-import` element\nassociated with the specified `href`."},{"name":"href","type":"String","desc":"The requested resource url."},{"name":"packageName","type":"String","desc":"The requested resources installable\npackage name."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"addImport","description":null}]},"function":true,"return":{"type":"{completed: Promise, href: String, packageRef: String, result: Promise}","desc":null}},{"name":"getPendingImports","type":"Function","desc":"\nReturns an array of imports that are pending completion.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"getPendingImports","description":null}]},"function":true,"return":{"type":"Array","desc":"The pending imports. Each item in the array is\nan object with the following properties:\n`{completed: Promise, href: String, packageRef: String, result: Promise}`"}}],"behaviors":[],"observers":[],"is":"urth-core-import-broker","contentHref":"bower_components/urth-core-import/urth-core-import-broker.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-import-broker"}]},"demos":[]},"urth-core-storage":{"type":"element","desc":"\n Provides an API to persist key value pairs.\n\n Examples:\n\n ```html\n <urth-core-storage collection='teams' id='teamStorage'></urth-core-storage>\n ```\n\n Values can be persisted and retrieved with the `set` and `get` API:\n\n ```javascript\n var ts = document.getElementById('teamStorage');\n ts.set('albuquerque', 'isotopes');\n ts.get('albuquerque');\n ```\n\n","events":[],"properties":[{"name":"clear","type":"Function","desc":"\nRemoves all of the keys for the configured collection from\nstorage.\n             ","params":[],"function":true},{"name":"collection","type":"String","desc":"\nThe name of the collection to store and retrieve values from\nstorage.\n                 ","published":true,"default":"__default__"},{"name":"enabled","type":"Boolean","desc":"\nWhether storage persistance is enabled.\n`true` if storage is enabled.\n                 ","published":true,"readOnly":true,"default":"ENABLED"},{"name":"get","type":"Function","desc":"\nReturns the value for the key in storage or null if it\nis not defined.\n\n","params":[{"name":"key","desc":"{String} key The name of the key in storage."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"get","description":null}]},"function":true,"return":{"type":"Object","desc":"The value stored for the key."}},{"name":"getKeys","type":"Function","desc":"\nReturns all of the keys in storage for the configured collection.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"getKeys","description":null}]},"function":true,"return":{"type":"Array","desc":"The array of keys for the collection."}},{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"remove","type":"Function","desc":"\nRemoves the specified key from storage.\n\n","params":[{"name":"key","type":"String","desc":"The name of the key in storage."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"remove","description":null}]},"function":true},{"name":"set","type":"Function","desc":"\nSets the value of the specified key in storage. If a value is not\nspecified, the key is removed from storage.\n\n","params":[{"name":"key","type":"String","desc":"The name of the key to set in storage."},{"name":"value","type":"Object","desc":"The value for the key."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"set","description":null}]},"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_getPrefixedKey","type":"Function","params":[{"name":"key"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true}],"behaviors":["Urth.LoggingBehavior"],"observers":[],"is":"urth-core-storage","contentHref":"bower_components/urth-core-storage/urth-core-storage.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-storage"}]},"demos":[]},"urth-viz-area":{"type":"element","desc":"\nRepresents a widget that draws a area chart.\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","published":true,"default":"area","readOnly":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-area","contentHref":"bower_components/urth-viz-area/urth-viz-area.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-area"}]},"demos":[]},"urth-core-watch":{"type":"element","desc":"\nCreates an element that listens to changes to the `value` property. When it changes, it fires 'watch_notify' custom\nevent on child elements.\n\nThe element provides a declarative way of handling changes to {{variables}}.\n\nExample: _One or more children. urth-core-function and urth-core-dataframe support the custom event._\n\n ```html\n <template>\n    <urth-core-watch value={{observed}}>\n        <urth-core-function ref=\"someFunction\" .../>\n    </urth-core-watch>\n </template>\n\n <template>\n    <urth-core-watch value={{observed}}>\n        <urth-core-dataframe ref=\"someDataframe\" .../>\n        <urth-core-function ref=\"someFunction\" .../>\n    </urth-core-watch>\n </template>\n ```\n\n","events":[],"properties":[{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"value","type":"Object","desc":"\nValue that is observed for changes.\n                 ","published":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"name":"_valueChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true}],"behaviors":["Urth.LoggingBehavior"],"observers":[{"javascriptNode":{"type":"Literal","start":388,"end":412,"loc":{"start":{"line":19,"column":16},"end":{"line":19,"column":40}},"range":[388,412],"value":"_valueChanged(value.*)","raw":"'_valueChanged(value.*)'"},"expression":"_valueChanged(value.*)"}],"is":"urth-core-watch","contentHref":"bower_components/urth-core-watch/urth-core-watch.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-watch"}]},"demos":[]},"urth-viz-bar":{"type":"element","desc":"\nRepresents a widget that draws a bar chart.\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","published":true,"default":"bar","readOnly":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-bar","contentHref":"bower_components/urth-viz-bar/urth-viz-bar.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-bar"}]},"demos":[]},"urth-viz-chart":{"type":"element","desc":"\nBase widget that draws a chart using NVD3, which supports several chart types.\n\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","desc":"\nThe type of chart (e.g. bar, pie).\n             ","published":true,"notify":true,"observer":"_typeChanged"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"name":"_typeChanged","type":"Function","params":[{"name":"newValue"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-chart","contentHref":"bower_components/urth-viz-chart/urth-viz-chart.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-chart"}]},"demos":[]},"urth-viz-explorer":{"type":"element","desc":"\nRepresents a widget that lets the user choose between a set of visualizations for a given dataframe.\n\nExample:\n\n    <urth-viz-explorer ref=\"aDataFrame\"></urth-viz-explorer>\n\n","events":[],"properties":[{"name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bars in barchart, slices in pie chart, etc).\n             ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"name":"showAsTable","type":"Boolean","published":true},{"name":"type","type":"String","desc":"\nThe `urth-viz-chart` chart type to render.\n             ","published":true,"default":"bar","notify":true,"observer":"_typeChanged"},{"name":"_showAsTable","type":"Function","params":[{"name":"type"}],"private":true,"function":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":[],"observers":[],"is":"urth-viz-explorer","contentHref":"bower_components/urth-viz-explorer/urth-viz-explorer.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-explorer"}]},"demos":[]},"urth-viz-col":{"type":"element","desc":"\n`urth-viz-col` creates a Polymer element that adds a hook to existing Handsontable to update column settings afterLoadData\n\n","events":[],"properties":[{"name":"format","type":"String","desc":"\nThe format this column is using. ex: \"$0,0.00\".\n                 ","published":true,"reflectToAttribute":"UNKNOWN"},{"name":"index","type":"Number","desc":"\nThe index this column is, relative to parent table, starting at 0.\n                 ","published":true,"reflectToAttribute":"UNKNOWN"},{"name":"type","type":"String","desc":"\nThe type of format this column is using. ex: \"numeric\".\n                 ","published":true,"reflectToAttribute":"UNKNOWN"}],"behaviors":[],"observers":[],"is":"urth-viz-col","contentHref":"bower_components/urth-viz-col/urth-viz-col.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-col"}]},"demos":[]},"urth-viz-cloud":{"type":"element","desc":"\nRepresents a widget that creates a word cloud.\n\nExample:\n\n```html\n<urth-viz-cloud id=\"cloud\" data='{\"smaller\": 0.1, \"small\":0.2, \"big\":0.5, \"bigger\":0.8}'></urth-viz-cloud>\n```\n\n","events":[],"properties":[{"name":"data","type":"Object","published":true,"observer":"_dataChanged"},{"name":"_dataChanged","type":"Function","params":[{"name":"newData"}],"private":true,"function":true},{"name":"_resize","type":"Function","params":[],"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronResizableBehavior"],"observers":[],"is":"urth-viz-cloud","contentHref":"bower_components/urth-viz-cloud/urth-viz-cloud.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-cloud"}]},"demos":[]},"urth-viz-line":{"type":"element","desc":"\nRepresents a widget that draws a line chart.\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","published":true,"default":"line","readOnly":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-line","contentHref":"bower_components/urth-viz-line/urth-viz-line.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-line"}]},"demos":[]},"urth-viz-ipywidget":{"type":"element","desc":"\nThis elements finds an ipywidget instance in the kernel that is referred to by the name specified in the `ref`\nproperty. It displays the ipywidget in its Local DOM and exposes the ipywidget's traits as properties available\nfor template binding. This element only works against a Python kernel that has ipywidgets installed.\n\nTo use this element, first create an instance of an ipywidget and assign it to a\nvariable name.\n\n```\nslider = IntSlider()\n```\n\nThen use this element to display and interact with the ipywidget by setting the `ref`\nproperty to the variable name\n\n```\n<urth-viz-ipywidgets ref='slider' trait-value='{{aVal}}'></urth-viz-ipywidgets>\n```\n\nTraits for the ipywidgets are made available through the element as bind-able properties. The\nnames for these properties have the form `trait-<name of trait>`.\n\n","events":[],"properties":[{"__fromBehavior":"Urth.LoggingBehavior","name":"log","type":"String","desc":"\nComma separated string of log levels to allow. The levels are INFO, WARN, DEBUG, ERROR, ALL.\nAn empty string or unset property is interpreted no logs\n                 ","published":true,"default":"","reflectToAttribute":"UNKNOWN"},{"name":"modelId","type":"String","desc":"\nThe id of the ipywidget model. This is set through communication with the kernel.\n                 ","published":true,"readOnly":true},{"name":"onKernelReady","type":"Function","params":[{"name":"kernel"}],"function":true},{"name":"onModelIdChange","type":"Function","params":[{"name":"modelid"}],"function":true},{"name":"onModelReady","type":"Function","desc":"\nonModelReady is invoked when have created the model portion of the widget. Sending the\nkernel side the value of `ref`.\n             ","params":[],"function":true},{"name":"ref","type":"String","desc":"\nName of the variable that references the widget to proxy. Must be a widget that is\ndefined in the kernel.\n                 ","published":true,"default":""},{"name":"refresh","type":"Function","desc":"\nSends a sync message to the kernel side. This is intended to make sure this element is bound to the\nlatest object referenced by `ref`.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"refresh","description":null}]},"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"resetDynamicProperties","type":"Function","desc":"\nRemoves all dynamic properties added to this element.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"resetDynamicProperties","description":null}]},"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"setDynamicProperties","type":"Function","desc":"\nSets the specified properties to this instance of an element. The\ndynProps parameter is in the same format as the `properties` object used\nin defining new Polymer elements.\n\n","params":[{"name":"dynProps","desc":"Object with properties to set"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"setDynamicProperties","description":null}]},"function":true},{"name":"traits","type":"Object","desc":"\nObject reflecting the current values of all the traits define in the\nipywidget. This property can be used for binding.\n                 ","published":true,"notify":true},{"name":"widgetModel","type":"Object","desc":"\nThe WidgetModel instance for the ipywidget. This is set once the `modelId` is known.\n                 ","published":true,"readOnly":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__complexObserver","type":"Function","desc":"\nGeneric complex observer to handle changes within arrays and objects\n             ","params":[{"name":"rec"}],"private":true,"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__createAccessors","type":"Function","desc":"\nModified to add `configurable` to the descriptor object to allow for\ndeletion of dynamically added properties.\nsee http://stackoverflow.com/questions/7141210/how-do-i-undo-a-object-defineproperty-call\n             ","params":[{"name":"property"},{"name":"effects"}],"private":true,"function":true},{"__fromBehavior":"Urth.DynamicPropertiesBehavior","name":"__createBindings","type":"Function","desc":"\nModified from Polymer.Bind.createBindings to allow only createBindings the\ngiven properties and to call our __createAccessors function.\n             ","params":[{"name":"dynProps"}],"private":true,"function":true},{"name":"__setWidgetModel","type":"Function","desc":"\nThis method is acting as a computed property method, but since there are Promises involve, we need\nto set it up using observers.\n             ","params":[{"name":"modelid"}],"private":true,"function":true},{"name":"_createTraitChangeHandler","type":"Function","params":[{"name":"param"}],"private":true,"function":true},{"name":"_createWidgetView","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_debug","type":"Function","desc":"\nLogs debug level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_error","type":"Function","desc":"\nLogs error level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_info","type":"Function","desc":"\nLogs info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"name":"_isTraitAttribute","type":"Function","params":[{"name":"attr"}],"private":true,"function":true},{"name":"_isUnset","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_log","type":"Function","desc":"\nAlias method for info level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_logBooleanMap","type":"Object","desc":"\nInternal map representation to facilitate test\n                 ","published":true,"private":true},{"name":"_onExecutionComplete","type":"Function","params":[],"private":true,"function":true},{"name":"_onKernelInfo","type":"Function","params":[{"name":"info"}],"private":true,"function":true},{"name":"_onTraitChange","type":"Function","params":[{"name":"argName"},{"name":"argValue"}],"private":true,"function":true},{"name":"_onTraitPropertyChanged","type":"Function","params":[{"name":"rec"}],"private":true,"function":true},{"name":"_onWidgetModelChange","type":"Function","desc":"\nThis method handles setup for the new ipywidget WidgetModel. It will create a new property based on\nthe name of the traits. These new properties will allow data binding and will be kept in sync with\nthe contents of the `traits` property.\n\n             ","params":[],"private":true,"function":true},{"name":"_setupTraitProperties","type":"Function","params":[{"name":"widgetTraits"}],"private":true,"function":true},{"name":"_syncTraitProperty","type":"Function","params":[{"name":"traits"}],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_testLevel","type":"Function","desc":"\nInternal utility to determine if the message should be sent to the console\n","params":[{"name":"level","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"boolean","desc":"True if message should reach thec onsole"}},{"__fromBehavior":"Urth.LoggingBehavior","name":"_toLogBooleanMap","type":"Function","desc":"\nConverts the comma separated string into a map of booleans\n","params":[{"name":"log","desc":null}],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true,"return":{"type":"{}","desc":null}},{"name":"_toTraitName","type":"Function","params":[{"name":"attr"}],"private":true,"function":true},{"name":"_toTraitPropertyName","type":"Function","params":[{"name":"traitName"}],"private":true,"function":true},{"name":"_toTraitPropertyObserverName","type":"Function","params":[{"name":"traitName"}],"private":true,"function":true},{"name":"_traitsFromAttributes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.LoggingBehavior","name":"_warn","type":"Function","desc":"\nLogs warn level messages\n","params":[],"jsdoc":{"tags":[{"tag":"private","type":null,"description":null}]},"private":true,"function":true},{"__fromBehavior":"Urth.JupyterKernelObserver","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.JupyterKernelObserver","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.JupyterWidgetBehavior","Urth.ExecutionCompleteBehavior","Urth.DynamicPropertiesBehavior","Urth.JupyterKernelObserver"],"observers":[{"javascriptNode":{"type":"Literal","start":1707,"end":1742,"loc":{"start":{"line":57,"column":16},"end":{"line":57,"column":51}},"range":[1707,1742],"value":"_onTraitPropertyChanged(traits.*)","raw":"'_onTraitPropertyChanged(traits.*)'"},"expression":"_onTraitPropertyChanged(traits.*)"},{"javascriptNode":{"type":"Literal","start":1760,"end":1787,"loc":{"start":{"line":58,"column":16},"end":{"line":58,"column":43}},"range":[1760,1787],"value":"__setWidgetModel(modelId)","raw":"'__setWidgetModel(modelId)'"},"expression":"__setWidgetModel(modelId)"},{"javascriptNode":{"type":"Literal","start":1805,"end":1840,"loc":{"start":{"line":59,"column":16},"end":{"line":59,"column":51}},"range":[1805,1840],"value":"_onWidgetModelChange(widgetModel)","raw":"'_onWidgetModelChange(widgetModel)'"},"expression":"_onWidgetModelChange(widgetModel)"}],"is":"urth-viz-ipywidget","contentHref":"bower_components/urth-viz-ipywidget/urth-viz-ipywidget.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-ipywidgets"}]},"demos":[]},"urth-viz-table":{"type":"element","desc":"\nCreates a Polymer element that displays a table with specified data and column headers.\n\nThe table accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.  Will accept a single row as an Array.\n\n2. `columns` should also be of type Array of strings, representing column headers. If undefined, table will not have column headers.\n\n","events":[],"properties":[{"name":"COL_OPTIONS","type":"Array"},{"name":"columns","type":"Array","desc":"\nColumn headers for table. Must be an Array of String.\n                 ","published":true},{"name":"computeTableView","type":"Function","params":[{"name":"datarows"},{"name":"columns"}],"function":true},{"name":"datarows","type":"Array","desc":"\nData rows for table. Must be an Array of Arrays.\n                 ","published":true},{"__fromBehavior":"Urth.DisplayErrorBehavior","name":"displayErrorMessage","type":"Function","desc":"\nDisplays the given error message in the output area associated\nwith this widget.\n\n","params":[{"name":"msg"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"displayErrorMessage","description":null}]},"function":true},{"name":"ROW_HEIGHT","type":"number"},{"name":"rowsVisible","type":"Number","desc":"\nNumber of rows user wants visible at a time,\n(the rest is hidden in scrollable area)\nIf table is shorter in height this number, the shorter height\nis rendered.\n                 ","published":true,"default":15,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizSelectionBehavior","name":"selection","type":"Array","desc":"\nThe data row corresponding to the currently selected row.\nReturns an Array of rows where `multiSelect` is enabled\n                 ","published":true,"default":"UNKNOWN","readOnly":true,"notify":true},{"__fromBehavior":"Urth.VizSelectionBehavior","name":"selectionAsObject","type":"Boolean","desc":"\nFalse by default to return `selection` as an array of values.\nIf true, will return `selection` as an object with key-value pairs (with column names as keys).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizSelectionBehavior","name":"selectionIndex","type":"Array","desc":"\nThe index of the selected data row or rows, an Array of rows where 'multiSelect' is enabled\n                 ","published":true,"default":"UNKNOWN","observer":"_selectionIndexChanged","notify":true},{"__fromBehavior":"Urth.VizSelectionBehavior","name":"selectionInfo","type":"Array","desc":"\nObject containing UI information based on the current selection.\nReturns an Array of Objects where `multiSelect` is enabled.\n                 ","published":true,"default":"UNKNOWN","readOnly":true,"notify":true},{"name":"tableView","type":"Object","desc":"\nFor implementation only, to trigger code when dependent\nattributes change.\n                 ","published":true},{"name":"_calcTableHeight","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.DisplayErrorBehavior","name":"_clearErrorMessages","type":"Function","params":[],"private":true,"function":true},{"name":"_createTable","type":"Function","params":[{"name":"datarows"}],"private":true,"function":true},{"name":"_forceRowSelection","type":"Function","desc":"\nBy setting the col to -1, this forces handson to think that the user clicked on a row header and it goes\nthrough the path of selecting the entire row.\n             ","params":[{"name":"event"},{"name":"coords"}],"private":true,"function":true},{"name":"_handleAfterSort","type":"Function","params":[],"private":true,"function":true},{"name":"_handleSelection","type":"Function","desc":"\nHandle when selection has finished taking place on handson\n             ","params":[{"name":"rowStart"},{"name":"colStart"},{"name":"rowEnd"},{"name":"colEnd"}],"private":true,"function":true},{"name":"_isHeightSet","type":"Function","params":[],"private":true,"function":true},{"name":"_parseColumn","type":"Function","params":[{"name":"column"},{"name":"colSettings"}],"private":true,"function":true},{"name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"name":"_resizeTable","type":"Function","params":[],"private":true,"function":true},{"name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"name":"_updateColumns","type":"Function","params":[{"name":"newColumns"}],"private":true,"function":true},{"name":"_updateDatarows","type":"Function","params":[{"name":"newDataRows"}],"private":true,"function":true},{"name":"_willDataFit","type":"Function","params":[{"name":"datarows"}],"private":true,"function":true},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronResizableBehavior","Urth.VizSelectionBehavior","Urth.DisplayErrorBehavior"],"observers":[],"is":"urth-viz-table","contentHref":"bower_components/urth-viz-table/urth-viz-table.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-table"}]},"demos":[]},"urth-viz-scatter":{"type":"element","desc":"\nRepresents a widget that draws a scatter chart.\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","published":true,"default":"scatter","readOnly":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-scatter","contentHref":"bower_components/urth-viz-scatter/urth-viz-scatter.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-scatter"}]},"demos":[]},"urth-viz-pie":{"type":"element","desc":"\nRepresents a widget that draws a pie chart.\nThe chart accepts data via attribute `datarows` and column headers via attribute `columns`:\n\n1. `datarows` should be of type Array of Arrays, representing list of rows.\n\n2. `columns` should also be of type Array of strings, representing column headers.\n\n","events":[{"__fromBehavior":"Urth.VizChartCommonBehavior","desc":"\nFired on the element when the visualization has rendered.\n\n","jsdoc":{"description":"\nFired on the element when the visualization has rendered.\n\n","tags":[{"tag":"event","type":null,"description":"urth-viz-render"}],"orig":"*\n             * Fired on the element when the visualization has rendered.\n             *\n             * @event urth-viz-render\n             "},"name":"urth-viz-render","params":[]}],"properties":[{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"columns","type":"Array","desc":"\nArray of column names.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"data","type":"Array","desc":"\nA computed Array value based on `datarows`, `columns`,\n`primary`, `secondary` and `type` properties.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"datarows","type":"Array","desc":"\nAn array representing data.\n                 ","published":true,"default":"[]","notify":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"height","type":"Number","desc":"\nHeight, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"margin","type":"Object","desc":"\nMargin, specified as JSON with the following properties: top, right, bottom, left\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"multiSelect","type":"Boolean","desc":"\nAllows user to select multiple chart components (bar in barchart, slice in pie chart, etc).\n                 ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"palette","type":"Array","desc":"\nList of colors to override the default palette.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"primary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify independent or input (e.g. x axis).\n                 ","published":true,"default":0,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"rotatelabels","type":"Number","desc":"\nAngle in degrees to rotate labels on the X axis.\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"secondary","type":"Number","desc":"\nReferences the nth column in datarows, typically used to\nidentify dependent or output (e.g. y axis).\n                 ","published":true,"default":"-1","observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"staggerlabels","type":"Boolean","desc":"\nWhether to stagger the layout of labels on the X axis.\n                 ","published":true,"default":false},{"name":"type","type":"String","published":true,"default":"pie","readOnly":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"width","type":"Number","desc":"\nWidth, in pixels\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xbounds","type":"Object","desc":"\nMinimum and maximum values for the x axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"xlabel","type":"String","desc":"\nLabel for the x-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ybounds","type":"Object","desc":"\nMinimum and maximum values for the y axis\n                 ","published":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ylabel","type":"String","desc":"\nLabel for the y-axis.\n                 ","published":true,"observer":"_update"},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_createChart","type":"Function","params":[{"name":"callback"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_fireWhenReady","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_formatAxes","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_parseColumns","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_resizer","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_selectionIndexChanged","type":"Function","params":[{"name":"newIndex"},{"name":"oldIndex"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_svgSelection","type":"Function","params":[{"name":"d3"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_transformData","type":"Function","params":[{"name":"datarows"},{"name":"columns"},{"name":"primary"},{"name":"secondary"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"_updateSelection","type":"Function","params":[{"name":"selectionInfo"}],"private":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Urth.VizChartCommonBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Urth.VizChartCommonBehavior"],"observers":[],"is":"urth-viz-pie","contentHref":"bower_components/urth-viz-pie/urth-viz-pie.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Viz"},{"tag":"element","type":null,"description":"urth-viz-pie"}]},"demos":[]},"urth-core-channel-viewer":{"type":"element","desc":"\nInternal element used to render the data within an `urth-core-channel`.\n\n","events":[],"properties":[{"name":"clear","type":"Function","params":[],"function":true},{"name":"data","type":"Object","published":true,"default":"{}"},{"name":"empty","type":"Boolean","published":true},{"name":"name","type":"String","published":true},{"name":"refresh","type":"Function","params":[],"function":true},{"name":"updateData","type":"Function","params":[{"name":"data"}],"function":true},{"name":"_computeDataAsArray","type":"Function","params":[],"private":true,"function":true},{"name":"_computeEmpty","type":"Function","params":[],"private":true,"function":true},{"name":"_updates","type":"Number","published":true,"default":0,"private":true}],"behaviors":[],"observers":[],"is":"urth-core-channel-viewer","contentHref":"bower_components/urth-core-channel/urth-core-channel-viewer.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Urth Core"},{"tag":"element","type":null,"description":"urth-core-channel-viewer"}]},"demos":[]}},"features":[]}